import{_ as s,r as t,o as r,c as d,a as e,b as n,d as i,e as a}from"./app-21fd3c9b.js";const o={},u=a('<h1 id="v853-pro-lvgl环境配置" tabindex="-1"><a class="header-anchor" href="#v853-pro-lvgl环境配置" aria-hidden="true">#</a> V853-PRO LVGL环境配置</h1><p>简介： 为了方便大家使用100ASK_V853-PRO开发板学习LVGL-UI开发，我们专门优化学习步骤，简化流程 提供一套 非常简单的快速上手教程，可以很方便快速开展 LVGL-UI相关的开发学习，无需再 折腾 环境搭建 SDK编译等复杂问题，传输文件只需一根 TypeC数据线 就可以搞定，使用起来非常简单。</p><p>系统镜像支持：</p><ul><li>alsa-utils工具集</li><li>blue-z工具集</li><li>dbus工具集</li><li>tplayerdemo视频播放</li><li>tslib库</li><li>valgrind调试工具</li><li>gdbserver调试</li></ul><p>工具链支持：</p><ul><li>GCC G++ LD AR AS GDB等</li><li>标准C库头文件，包含stdio.h 等等</li><li>包含系统镜像配套的 sysroot环境，用于交叉编译开发 对应的 应用程序。 如 alsa/ 头文件包含。</li></ul><h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h2><h3 id="准备硬件" tabindex="-1"><a class="header-anchor" href="#准备硬件" aria-hidden="true">#</a> 准备硬件</h3><ol><li>100ASK_V853-PRO开发板 x1 可以正常工作，正常运行。</li><li>（7寸RGB 1024x600显示屏 双面下接）接到开发板上。</li><li>一台可以运行 ubuntu 18虚拟机的 系统。</li></ol><h3 id="获取专用镜像" tabindex="-1"><a class="header-anchor" href="#获取专用镜像" aria-hidden="true">#</a> 获取专用镜像</h3>',10),c={href:"https://dongshanpi.cowtransfer.com/s/b86a223797f74b",target:"_blank",rel:"noopener noreferrer"},v=e("p",null,[n("​ 获取完成后，"),e("strong",null,"解压"),n("镜像压缩包，可以看到两个文件,分别是镜像文件和READM.md。其中镜像文件可以使用开发板对应的烧写工具进行烧录；README.md文件里面包含镜像MD5校验码和版本说明，客户可以通过校验码确认文件的完整性和镜像版本的功能说明。")],-1),p=e("p",null,"注意：解压缩 后需要使用的 镜像文件为 .img",-1),m=e("h3",{id:"获取toolchain工具链",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#获取toolchain工具链","aria-hidden":"true"},"#"),n(" 获取Toolchain工具链")],-1),g=e("p",null,"​ 我们为客户提供有针对LVGL编译开发所使用的工具链文件，可以通过以下链接进行下载：",-1),h={href:"https://dongshanpi.cowtransfer.com/s/b8252162686f44",target:"_blank",rel:"noopener noreferrer"},b={href:"https://dongshanpi.cowtransfer.com/s/d8f246db09e349",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,[n("​ 获取完成后，"),e("strong",null,"解压"),n("两个文件的压缩包，可以看到README.md文件和对应的文件。README.md文件里面包含镜像MD5校验码和版本说明，客户可以通过校验码确认文件的完整性和镜像版本的功能说明。")],-1),x=e("p",null,"注意：解压缩 后需要使用的 文件 后缀 为 .tar.gz",-1),f=e("h3",{id:"获取lvgl源码",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#获取lvgl源码","aria-hidden":"true"},"#"),n(" 获取LVGL源码")],-1),k=e("p",null,"​ 我们为客户提供有基本的LVGL示例程序，该示例程序可以帮助客户了解LVGL应用开发流程，可以通过以下链接进行下载：",-1),w={href:"https://dongshanpi.cowtransfer.com/s/4b36b0b0a03349",target:"_blank",rel:"noopener noreferrer"},L=e("p",null,"压缩包名称为：",-1),V=e("p",null,"​ 获取完成后，解压源码压缩包，可以看到README.md文件和对应的源码文件。README.md文件里面包含镜像MD5校验码和版本说明，客户可以通过校验码确认文件的完整性和镜像版本的功能说明。",-1),G=e("h2",{id:"开始使用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开始使用","aria-hidden":"true"},"#"),n(" 开始使用")],-1),E=e("h3",{id:"运行ubuntu镜像",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#运行ubuntu镜像","aria-hidden":"true"},"#"),n(" 运行Ubuntu镜像")],-1),A=e("p",null,"​ 这里假设提供两种方法供大家选择。",-1),M={href:"http://allwinner-docs.100ask.org/Application/LinuxEnvironmentonfiguration/01-EnvironmentalConfiguration.html",target:"_blank",rel:"noopener noreferrer"},D=e("strong",null,"eLinux应用开发环境",-1),R=e("strong",null,"开发环境配置",-1),S={href:"https://dongshanpi.cowtransfer.com/s/282461bbb3ac4d",target:"_blank",rel:"noopener noreferrer"},y=a(`<p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/100ask-VMware-lvgl.gif" alt="100ask-VMware-lvgl"></p><p>注意：虚拟机的用户名为 <strong>ubuntu</strong> 密码为：<strong>ubuntu</strong> <strong>如果您使用我们提供的虚拟机镜像。里面已经包含工具链和LVGL DEMO示例。</strong></p><h3 id="配置系统开发环境" tabindex="-1"><a class="header-anchor" href="#配置系统开发环境" aria-hidden="true">#</a> 配置系统开发环境</h3><p>注意： <strong>如果您使用 方式二 我们提供的虚拟机镜像。里面已经配置好了如下环境依赖。</strong></p><p>如果您是使用自己的Ubuntu系统则需要安装系统编译所需依赖环境。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> open-vm-tools-desktop 
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span>  <span class="token function">sed</span> <span class="token function">make</span> binutils build-essential  gcc g++ <span class="token function">bash</span> patch <span class="token function">gzip</span> <span class="token function">bzip2</span> perl  <span class="token function">tar</span> cpio <span class="token function">unzip</span> <span class="token function">rsync</span> <span class="token function">file</span>  <span class="token function">bc</span> <span class="token function">wget</span> python  cvs <span class="token function">git</span> mercurial <span class="token function">rsync</span>  subversion android-tools-mkbootimg <span class="token function">vim</span>  libssl-dev  android-tools-fastboot
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span>  libncurses5-dev   u-boot-tools 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新开发板系统镜像" tabindex="-1"><a class="header-anchor" href="#更新开发板系统镜像" aria-hidden="true">#</a> 更新开发板系统镜像</h3>`,7),B={href:"http://allwinner-docs.100ask.org/Basic/100ASK_V853-PRO/04-BurningSystem.html",target:"_blank",rel:"noopener noreferrer"},z=e("code",null,"100ask_v853-pro_tinasdk-open_lvgl8_rgb-7inch1024x600_v1.0.img",-1),C=e("h2",{id:"运行lvgl示例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#运行lvgl示例","aria-hidden":"true"},"#"),n(" 运行LVGL示例")],-1),O=e("h3",{id:"启动开发板",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#启动开发板","aria-hidden":"true"},"#"),n(" 启动开发板")],-1),I={href:"http://allwinner-docs.100ask.org/Basic/100ASK_V853-PRO/03-StartFirstExperience.html",target:"_blank",rel:"noopener noreferrer"},K=a(`<h3 id="运行lvgl示例-1" tabindex="-1"><a class="header-anchor" href="#运行lvgl示例-1" aria-hidden="true">#</a> 运行LVGL示例</h3><p>​ 打开串口终端软件，这里我使用MobaXterm软件演示，选择开发板的串口终端号，可以在设备管理中查看</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/image-20230707143104904.png" alt="image-20230707143104904"></p><p>这里我的串口设备号为<code>COM15</code>，所以在串口终端软件中也应该使用<code>COM15</code>，波特率为115200。操作步骤如下所示：</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/100ask-lvgl-serial-demo.gif" alt="100ask-lvgl-serial-demo"></p><p>上面操作以7寸RGB屏作为演示硬件测试指令，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>root@TinaLinux:/# lv_examples 0
wh=1024x600, vwh=1024x1200, bpp=32, rotated=0
Turn on double buffering.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入后，显示屏上会显示如下如所示的LVGL示例：</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/LVGL-Widgets-Demo.gif" alt=""></p><p>注意：LVGL示例会自动适配屏幕，可能和上面展示的比例不一致。</p><p>​ 系统中内置有5个LVGL演示应用，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>lv_examples 0, is lv_demo_widgets
lv_examples 1, is lv_demo_music
lv_examples 2, is lv_demo_benchmark
lv_examples 3, is lv_demo_keypad_encoder
lv_examples 4, is lv_demo_stress
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开发lvgl程序" tabindex="-1"><a class="header-anchor" href="#开发lvgl程序" aria-hidden="true">#</a> 开发LVGL程序</h2><h3 id="配置编译lvgl环境" tabindex="-1"><a class="header-anchor" href="#配置编译lvgl环境" aria-hidden="true">#</a> 配置编译lvgl环境</h3><p>**注意：**如果您使用的是前文 <code>开始使用--&gt;运行虚拟机 方式二</code> 中 我们提供好的虚拟机，可直接跳过此章节，进入下一小节《编译LVGL源码》；如果您是自己配置的虚拟机，请认准阅读并按此章节进行操作。</p><p>​ 假设将下载的工具链和源码tar.gz格式的压缩包文件传入虚拟机的任意目录中，这里我新建一个lvgl工作目录存储三个压缩包。输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804ubuntu@ubuntu1804:~$ mkdir lvgl-work
ubuntu@ubuntu1804:~$ cd lvgl-work
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将<code>allwinner-tinasdk_lvgl8_demo_V1.0.tar.gz</code>文件传入<code>lvgl-work</code>目录中，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804:~/lvgl-works$ ls
allwinner-tinasdk_lvgl8_demo_V1.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>新建<code>toolchain</code>文件夹用于存储<code>sysroot</code>和<code>gcc</code>文件夹</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804ubuntu@ubuntu1804:~$ mkdir toolchain
ubuntu@ubuntu1804:~$ cd toolchain
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>传入压缩包后，如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804:~/lvgl_work/toolchain$ ls
100ask_v853-pro_arm-openwrt-linux-muslgnueabi_sysroot_v1.0.tar.gz
gcc-8.3-2021.08-x86_64_arm-openwrt-linux-gnueabi-musl.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在toolchain目录中解压gcc工具链压缩包和sysroot依赖压缩包，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tar -xzvf gcc-8.3-2021.08-x86_64_arm-openwrt-linux-gnueabi-musl.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tar -xzvf 100ask_v853-pro_arm-openwrt-linux-muslgnueabi_sysroot_v1.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压完成后返回上一级lv_work目录中输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804:~/lvgl_work/toolchain$ cd ../
ubuntu@ubuntu1804:~/lvgl_work$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>解压lvgl demo源码压缩包</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tar -xzvf allwinner-tinasdk_lvgl8_demo_V1.0.tar.gz 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压完成后的目录如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804:~/lvgl_work$ tree -L 2
.
├── allwinner-tinasdk_lvgl8_demo_V1.0.tar.gz
├── lv_port_linux_frame_buffer
│   ├── CMakeLists.txt
│   ├── LICENSE
│   ├── lv_conf.h
│   ├── lv_drivers
│   ├── lv_drv_conf.h
│   ├── lvgl
│   ├── main.c
│   ├── Makefile
│   ├── mouse_cursor_icon.c
│   └── README.md
└── toolchain
    ├── 100ask_v853-pro_arm-openwrt-linux-muslgnueabi_sysroot_v1.0.tar.gz
    ├── arm-openwrt-linux-muslgnueabi
    ├── gcc-8.3-2021.08-x86_64_arm-openwrt-linux-gnueabi-musl.tar.gz
    ├── sysroot
    └── toolchain

7 directories, 11 files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>lv_port_linux_frame_buffer</code>为LVGL Demo示例源码；<code>toolchain</code>中包含gcc交叉编译工具链和sysroot依赖文件。</p><p>下面开始修改源码中的Makefile文件，使lvgl源码使用下载的工具链进行编译。</p><p>进入gcc工具链文件目录的bin目录中查看交叉编译工具链是否存在</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804:~/lvgl_work/toolchain/arm-openwrt-linux-muslgnueabi/bin$ ls arm-openwrt-linux-muslgnueabi-gcc
arm-openwrt-linux-muslgnueabi-gcc
ubuntu@ubuntu1804:~/lvgl_work/toolchain/arm-openwrt-linux-muslgnueabi/bin$ pwd
/home/ubuntu/lvgl_work/toolchain/arm-openwrt-linux-muslgnueabi/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>arm-openwrt-linux-muslgnueabi-gcc</code>交叉编译工具链绝对路径为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/home/ubuntu/lvgl_work/toolchain/arm-openwrt-linux-muslgnueabi/bin/arm-openwrt-linux-muslgnueabi-gcc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进入LVGL源码目录中，查看源码文件。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ubuntu@ubuntu1804:~/lvgl_work$ cd lv_port_linux_frame_buffer/
ubuntu@ubuntu1804:~/lvgl_work/lv_port_linux_frame_buffer$ ls
CMakeLists.txt  LICENSE  lv_conf.h  lv_drivers  lv_drv_conf.h  lvgl  main.c  Makefile  mouse_cursor_icon.c  README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改Makfiel文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vi Makefile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改Makefile文件中<code>CC</code>为刚刚前面确认的交叉编译工具链路径，例如我刚刚确认的gcc交叉编译工具链绝对路径为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/home/ubuntu/lvgl_work/toolchain/arm-openwrt-linux-muslgnueabi/bin/arm-openwrt-linux-muslgnueabi-gcc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>那么修改Makfile文件中的<code>CC</code>修改为gcc交叉编译工具链绝对路径。</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/image-20230707173444918.png" alt="image-20230707173444918"></p><p>修改步骤如下所示：</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/100ask-lvgl-modifyMafile.gif" alt="100ask-lvgl-modifyMafile"></p><p>修改完成后，保存退出编辑界面。</p><h3 id="编译lvgl源码" tabindex="-1"><a class="header-anchor" href="#编译lvgl源码" aria-hidden="true">#</a> 编译LVGL源码</h3><p>此时还需要指定存放交叉编译需要使用的工具链、库文件、头文件的文件夹。在终端输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export ARCH=arm
export CROSS_COMPILE=arm-openwrt-linux-muslgnueabi-
export PATH=$PATH:/home/ubuntu/lvgl_work/toolchain/arm-openwrt-linux-eabi-musl/bin/
export SYSROOT_DIR=/home/ubuntu/lvgl_work/toolchain/sysroot/
export STAGING_DIR=/home/ubuntu/lvgl_work/toolchain/arm-openwrt-linux-muslgnueabi/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：如果您是自己配置的虚拟机的请修改为对应的路径,，如果使用我们提供的方式二 直接 复制 粘贴到 ubuntu18.04终端执行即可。</p><p>编译过程如下所示：</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/100ask-lvgl-makeAndBuild.gif" alt="100ask-lvgl-makeAndBuild"></p><p>等待编译完成后，会在当前目录下生成名称为<code>demo</code>的应用程序。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>book@100ask:~/lvgl-work/lv_port_linux_frame_buffer$ ls demo 
demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="上传至开发板运行" tabindex="-1"><a class="header-anchor" href="#上传至开发板运行" aria-hidden="true">#</a> 上传至开发板运行</h3>`,58),P={href:"http://allwinner-docs.100ask.org/Basic/100ASK_V853-PRO/03-StartFirstExperience.html#_3-%E9%80%9A%E8%BF%87adb%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},T=a(`<p>在ubuntu系统下使用ADB功能将生成<code>demo</code>应用程序传输到开发板中运行，将ADB设备连接到虚拟机端中。查看ADB设备的设备号</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>abd devices
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>传输LVGL示例程序进开发板端的root目录下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb push demo /mnt/UDISK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>操作过程如下所示：</p><p><img src="http://photos.100ask.net/allwinner-docs/lvgl8-ui/100ask-lvgl-adbPush.gif" alt="100ask-lvgl-adbPush"></p><p>传输完成后，切换到开发板串口终端软件，进入终端，输入 如下命令： 即可看到屏幕运行 自己编译新的demo程序。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>root@TinaLinux:/# cd /mnt/UDISK/
root@TinaLinux:~# ./demo 0
wh=480x800, vwh=480x1600, bpp=32, rotated=0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入完成后，即可实现镜像中内置的lvgl demo演示示例。</p><h2 id="深入课程学习" tabindex="-1"><a class="header-anchor" href="#深入课程学习" aria-hidden="true">#</a> 深入课程学习</h2><h3 id="lvgl专题课程学习" tabindex="-1"><a class="header-anchor" href="#lvgl专题课程学习" aria-hidden="true">#</a> LVGL专题课程学习</h3><p>LVGL开源GUI零基础入门课程(韦东山·监制) 教程基于lvgl v8.2版本</p>`,12),$=e("iframe",{src:"//player.bilibili.com/player.html?aid=209749730&bvid=BV1Ya411r7K2&cid=458073148&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"}," ",-1),U=e("h3",{id:"lvgl项目课程学习",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#lvgl项目课程学习","aria-hidden":"true"},"#"),n(" LVGL项目课程学习")],-1),N=e("strong",null,"基于LVGL的温湿度远程监控显示系统",-1),F={href:"http://forums.100ask.net/t/topic/602",target:"_blank",rel:"noopener noreferrer"},H=e("strong",null,"forums.100ask.net/t/topic/602",-1),Y=a('<ul><li><ol><li>移植LVGL到Linux开发板</li></ol></li><li><ol start="2"><li>初步移植MQTT到Ubuntu和Linux开发板</li></ol></li><li><ol start="3"><li>SquareLine Studio与LVGL模拟器</li></ol></li><li><ol start="4"><li>温湿度监控系统——绘制温湿度折线图</li></ol></li><li><ol start="5"><li>温湿度监控系统——学习paho mqtt的基本操作</li></ol></li><li><ol start="6"><li>温湿度监控系统——多线程与温湿度的获取显示</li></ol></li><li><ol start="7"><li>设计温湿度采集MCU子系统</li></ol></li><li><ol start="8"><li>阿里云物联网平台的简单使用</li></ol></li></ul>',1),q=e("li",null,[e("p",null,"百问网linux桌面GUI，基于LVGL 8.1。"),e("ul",null,[e("li",null,"LVGL视频教程： https://www.bilibili.com/video/BV1Ya411r7K2"),e("li",null,"仓库源码： https://gitee.com/weidongshan/lv_100ask_linux_desktop")])],-1),X=e("li",null,[e("p",null,"lv_lib_100ask是基于lvgl库的各种开箱即用的方案参考或对lvgl库各种组件的增强接口。"),e("ul",null,[e("li",null,"移植示例视频教程： https://www.bilibili.com/video/BV1Xa41197uh?p=9"),e("li",null,"仓库源码： https://gitee.com/weidongshan/lv_lib_100ask.git")])],-1),Q=e("h3",{id:"更多示例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#更多示例","aria-hidden":"true"},"#"),n(" 更多示例")],-1);function W(j,J){const l=t("ExternalLinkIcon");return r(),d("div",null,[u,e("ul",null,[e("li",null,[n("7寸RGB屏LVGL镜像："),e("a",c,[n("100ask_v853-pro_tinasdk-open_lvgl8_rgb-7inch1024x600_v1.0.zip 点击下载"),i(l)])])]),v,p,m,g,e("ul",null,[e("li",null,[e("p",null,[n("gcc工具链："),e("a",h,[n("gcc-8.3-2021.08-x86_64_arm-openwrt-linux-gnueabi-musl.zip 点击下载"),i(l)])])]),e("li",null,[e("p",null,[n("sysroot依赖文件："),e("a",b,[n("100ask_v853-pro_arm-openwrt-linux-muslgnueabi_sysroot_v1.0.zip 点击下载"),i(l)])])])]),_,x,f,k,e("ul",null,[e("li",null,[e("p",null,[n("LVGL示例源码："),e("a",w,[n("allwinner-tinasdk_lvgl8_demo_V1.0.zip 点击下载"),i(l)])]),L])]),V,G,E,A,e("p",null,[n("​ 方式一：如果您之前已经按照页面"),e("a",M,[n("《"),D,n("》---> 《"),R,n("》"),i(l)]),n(" 配置好了虚拟机，那您可直接阅读本章下一小节的《配置系统开发环境》")]),e("p",null,[n("​ 方式二：如果您没有虚拟机，也不想重新配置，可以下载使用我们已经配置好的虚拟机"),e("a",S,[n(" Allwinner-TinaSDK_100ASK_V853-PRO_LVGLDemo_Ubuntu-18.04_VM_V1.0.zip "),i(l)]),n(" 。（注意配置好的虚拟机占用的内存相对较大，下载会比较慢）下载链接： https://dongshanpi.cowtransfer.com/s/6842967fb9e541")]),y,e("p",null,[n("因为此章节页面需要特定的镜像和环境才能开发，所以您需要更新开发板内的默认系统镜像，烧写系统 参考 文章 "),e("a",B,[n("烧录开发板系统"),i(l)]),n(" 里面进行烧录，但是需要注意 烧写的镜像 文件 为 此章节 前面 《获取专用镜像》 里面的 "),z,n(" 进行烧录更新，烧录完成后，镜像内就会包含 LVGL-UI开发课程 所需的 依赖 以及测试示例程序 lv_example")]),C,O,e("p",null,[n("​ 按要求接入电源或Type-c数据线，拨动拨码开关，将开发板上电，如果您是第一次使用开发板 请查看文章 100ASK_V853-PRO开发板使用 内 "),e("a",I,[n("开发板启动初体验"),i(l)])]),K,e("p",null,[n("注意： 默认情况下 上述的 ubuntu系统配置环境 以及我们制作的虚拟机镜像已经配置好 adb环境，大家只需要 参考 文章 "),e("a",P,[n("3-通过adb传输文件"),i(l)]),n(" 讲您的开发板 挂载至 ubuntu系统上 即可操作如下步骤 开始进行上传操作。")]),T,$,U,e("ul",null,[e("li",null,[e("p",null,[N,n(" 课程目录： "),e("a",F,[H,i(l)])]),Y]),q,X]),Q])}const ee=s(o,[["render",W],["__file","100ASK_V853-PRO_00-DeviceConfig.html.vue"]]);export{ee as default};
