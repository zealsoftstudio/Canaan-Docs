import{_ as n,o as s,c as a,e as p}from"./app-21fd3c9b.js";const t={},e=p(`<h1 id="_2-图像处理" tabindex="-1"><a class="header-anchor" href="#_2-图像处理" aria-hidden="true">#</a> 2 图像处理</h1><p>​ 前言：所有的图像文件，都是一种二进制格式文件，每一个图像文件，都可以通过解析文件中的每一组二进制数的含义来获得文件中的各种信息，如图像高度，宽度，像素位数等等。只是不同的文件格式所代表的二进制数含义不一样罢了。我们可以通过UltraEdit软件打开图像文件并查看里面的二进制数排列。</p><h2 id="_2-1-bmp图像处理" tabindex="-1"><a class="header-anchor" href="#_2-1-bmp图像处理" aria-hidden="true">#</a> 2.1 BMP图像处理</h2><h3 id="_2-1-1-bmp文件格式解析" tabindex="-1"><a class="header-anchor" href="#_2-1-1-bmp文件格式解析" aria-hidden="true">#</a> 2.1.1 BMP文件格式解析</h3><p>​ BMP是一种常见的图像格式，BMP文件可看成由4个部分组成：位图文件头(bitmap-file header)、位图信息头(bitmap-information header)、调色板(color palette)和定义位图的字节阵列。以最简单的24位真彩色BMP文件作例子讲解：</p><ol><li>位图文件头(bitmap-file header)</li></ol><p>这部分可以理解为是一个结构体，里面的每一个成员都表示一个属性</p><p>位数文件头由以下信息组成：</p><table><thead><tr><th style="text-align:left;">名称</th><th>字节数</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">bfType</td><td>2字节</td><td style="text-align:left;">表明它是BMP格式的文件，<br>内容固定为0x42,0x4D，<br>即ASCII字符中的“B”“M”</td></tr><tr><td style="text-align:left;">bfSize</td><td>4字节</td><td style="text-align:left;">BMP文件的大小，单位为字节</td></tr><tr><td style="text-align:left;">bfReserved1</td><td>2字节</td><td style="text-align:left;">保留</td></tr><tr><td style="text-align:left;">bfReserved2</td><td>2字节</td><td style="text-align:left;">保留</td></tr></tbody></table><p>我们用UltraEdit打开一个BMP文件，可以看到如下信息</p><p><img src="http://photos.100ask.net/NewHomeSite/ImageProcess_Image001.png" alt="ImageProcess_Image001"></p><p>这是该BMP文件前32字节的数据，可以看到，前两个字节分别为0x42,0x4D；</p><p>接着后面4个字节依次是0x36,0xF9,0x15,0x00。</p><p>​ 在BMP格式中，文件的存储方式是小端模式，即如果一个数据需要用几个字节来表示的话，那么，低位数据存在低位地址上，高位数据存在高位地址上。类似的，还有大端模式，即：如果一个数据需要用几个字节来表示的话，那么，低位数据存在高位地址上，高位数据存在低位地址上。</p><p>所以0x36,0xF9,0x15,0x00四个数据拼接方法应该是：0x0015F936(在数字中个位即最右边才是最低位)，它正好就是这个文件的大小：</p><p><img src="http://photos.100ask.net/NewHomeSite/ImageProcess_Image002.png" alt="ImageProcess_Image002"></p><p>紧接着是4个保留位字节，其数据必须为0x00。</p><p>最后是4个字节的便宜位，可以看到位图文件头+位图信息头+调色板的大小应该是0x36。</p><ol start="2"><li>位图信息头(bitmap-information header)</li></ol><p>位图信息头也可以理解为是一个结构体，其成员有：</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">字节数</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">biSize</td><td style="text-align:left;">4</td><td style="text-align:left;">整个位图信息头结构体的大小</td></tr><tr><td style="text-align:left;">biWidth</td><td style="text-align:left;">4</td><td style="text-align:left;">图像宽度，单位为像素</td></tr><tr><td style="text-align:left;">biHeight</td><td style="text-align:left;">4</td><td style="text-align:left;">图像高度，单位为像素。 此外，这个数的<br>正负可以判断图像是正向还是倒向的，若为<br>正，则表示是正向；若为负，则表示反向。<br>其实根本不同就是坐标系的建立方法不一样。<br>后面写代码时会讲。</td></tr><tr><td style="text-align:left;">biPlanes</td><td style="text-align:left;">2</td><td style="text-align:left;">颜色平面书，其值总为1</td></tr><tr><td style="text-align:left;">biBitCount</td><td style="text-align:left;">2</td><td style="text-align:left;">即1个像素用多少位的数据来表示，其值可<br>能为1，4，8，16，24，32。我们是以24位<br>真彩色为例子讲解的</td></tr><tr><td style="text-align:left;">biCompression</td><td style="text-align:left;">4</td><td style="text-align:left;">数据的压缩类型</td></tr><tr><td style="text-align:left;">biSizeImage</td><td style="text-align:left;">4</td><td style="text-align:left;">图像数据的大小，单位为字节</td></tr><tr><td style="text-align:left;">biXPelsPerMeter</td><td style="text-align:left;">4</td><td style="text-align:left;">水平分辨率，单位是像素/米</td></tr><tr><td style="text-align:left;">biYPelsPerMeter</td><td style="text-align:left;">4</td><td style="text-align:left;">垂直分辨率，单位是像素/米</td></tr><tr><td style="text-align:left;">biClrUsed</td><td style="text-align:left;">4</td><td style="text-align:left;">调色板中的颜色索引数</td></tr><tr><td style="text-align:left;">biClrImportant</td><td style="text-align:left;">4</td><td style="text-align:left;">说明有对图像有重要影响的颜色索引的数<br>目，若为0，表示都重要</td></tr></tbody></table><p>对照源文件数据：</p><p><img src="http://photos.100ask.net/NewHomeSite/ImageProcess_Image003.png" alt="ImageProcess_Image003"></p><p>0E-11：00000028h = 40,表示这个结构体大小是40字节。</p><p>12-15：00000320h = 800，图像宽为800像素。</p><p>16-19：00000258h = 600，图像高为600像素，与文件属性一致。这是一个正数，说明图像是正向的，数据是以图像左下角为原点，以水平向右为X轴正方向，以垂直向上为Y轴正方向排列的。若为负，则说明图像是反向的，数据是以图像左上角角为原点，以水平向右为X轴正方向，以垂直向下为Y轴正方向排列的。</p><p>1A-1B：0001h, 该值总为1。</p><p>1C-1D：0018h = 24, 表示每个像素占24个比特，即24位真彩色</p><p>上面这几个信息跟文件属性是一致的：</p><p><img src="http://photos.100ask.net/NewHomeSite/ImageProcess_Image004.png" alt="ImageProcess_Image004"></p><p>1E-21：00000000h，BI_RGB， 说明本图像不压缩。</p><p>22-25：00000000h，图像的大小，因为使用BI_RGB，所以设置为0。</p><p>26-29：00000000h，水平分辨率，缺省。</p><p>2A-2D：00000000h，垂直分辨率，缺省。</p><p>2E-31：00000000h，对于24位真彩色来说，是没有调色板的，所以为0。</p><p>32-35：00000000h，对于24位真彩色来说，是没有调色板的，所以为0。</p><ol start="3"><li>调色板(color palette)</li></ol><p>24位真彩色没有调色板，这里为了简化不赘诉。</p><ol start="4"><li>定义位图的字节阵列</li></ol><p>这一部分就是真正的图像数据了，24位真彩色数据是按按BGR各一字节循环排列而成。</p><h3 id="_2-1-2-代码实现-将bmp文件解析为rgb格式-在lcd上显示" tabindex="-1"><a class="header-anchor" href="#_2-1-2-代码实现-将bmp文件解析为rgb格式-在lcd上显示" aria-hidden="true">#</a> 2.1.2 代码实现：将BMP文件解析为RGB格式，在LCD上显示</h3><p>让BMP文件在开发板的LCD上显示出来，有几个需要注意的点：</p><ol><li><p>开发板LCD上的显示格式是RGB格式的，而且有多种表示格式：可能用2字节表示（RGB565格式），可能用3字节表示（RGB888），而原始的24位真彩色BMP文件则是按BGR格式排列的，需要对原始的图像数据进行转化。</p></li><li><p>在转化过程中，LCD上的显存地址固定是以LCD左上角为首地址，而BMP格式中正向图像是以图片的左下角为数据首地址的。因此在进行数据转化时还需要注意坐标的变换。</p></li></ol><p>代码清单2.1实现了将24位真彩色的BMP图像转化为RGB格式</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>代码清单<span class="token number">2.1</span>
<span class="token number">1.</span>	<span class="token comment">/********************************************************************** 
2.	 * 函数名称： IsBmp 
3.	 * 功能描述： 判断该文件是否为BMP文件 
4.	 * 输入参数： ptFileMap - 内含文件信息 
5.	 * 输出参数： 无 
6.	 * 返 回 值： 0 - 是BMP格式, -1 -不是BMP格式 
7.	 ***********************************************************************/</span>  
<span class="token number">8.</span>	<span class="token keyword">int</span> <span class="token function">IsBmp</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token operator">*</span>ppFp<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>strFileName<span class="token punctuation">)</span>   
<span class="token number">9.</span>	<span class="token punctuation">{</span>  
<span class="token number">10.</span>	    <span class="token keyword">char</span> strCheckHeader<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   
<span class="token number">11.</span>	    <span class="token operator">*</span>ppFp<span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>strFileName<span class="token punctuation">,</span> <span class="token string">&quot;rb+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">12.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>ppFp<span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">13.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">14.</span>	    <span class="token punctuation">}</span>  
<span class="token number">15.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fread</span><span class="token punctuation">(</span>strCheckHeader<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">*</span>ppFp<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>   
<span class="token number">16.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">17.</span>	      
<span class="token number">18.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span>strCheckHeader<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0x42</span> <span class="token operator">||</span> strCheckHeader<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0x4d</span><span class="token punctuation">)</span>  
<span class="token number">19.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">20.</span>	    <span class="token keyword">else</span>  
<span class="token number">21.</span>	        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">22.</span>	<span class="token punctuation">}</span>  
<span class="token number">23.</span>	  
<span class="token number">24.</span>	  
<span class="token number">25.</span>	  
<span class="token number">26.</span>	<span class="token comment">/********************************************************************** 
27.	 * 函数名称： MapFile 
28.	 * 功能描述： 使用mmap函数映射一个文件到内存,以后就可以直接通过内存来访问文件 
29.	 * 输入参数： PT_PictureData ptData 内含图像数据 
30.	 * 输出参数： ptData-&gt;iFileSize     : 文件大小 
31.	 *                        ptData-&gt;pucFileData : 映射内存的首地址 
32.	 * 返 回 值： 0      - 成功其他值 - 失败 
33.	 ***********************************************************************/</span>  
<span class="token number">34.</span>	<span class="token keyword">int</span> <span class="token function">MapFile</span><span class="token punctuation">(</span>PT_PictureData ptData<span class="token punctuation">)</span>  
<span class="token number">35.</span>	<span class="token punctuation">{</span>  
<span class="token number">36.</span>	    <span class="token keyword">int</span> iFd<span class="token punctuation">;</span>  
<span class="token number">37.</span>	    <span class="token keyword">struct</span> <span class="token class-name">stat</span> tStat<span class="token punctuation">;</span>  
<span class="token number">38.</span>	      
<span class="token number">39.</span>	    <span class="token comment">/* 打开文件 */</span>  
<span class="token number">40.</span>	        iFd <span class="token operator">=</span> <span class="token function">fileno</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">41.</span>	    <span class="token function">fstat</span><span class="token punctuation">(</span>iFd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>tStat<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">42.</span>	    ptData<span class="token operator">-&gt;</span>iFileSize<span class="token operator">=</span> tStat<span class="token punctuation">.</span>st_size<span class="token punctuation">;</span>  
<span class="token number">43.</span>	    ptData<span class="token operator">-&gt;</span>pucFileData<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">mmap</span><span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token punctuation">,</span> tStat<span class="token punctuation">.</span>st_size<span class="token punctuation">,</span> PROT_READ <span class="token operator">|</span> PROT_WRITE<span class="token punctuation">,</span> MAP_SHARED<span class="token punctuation">,</span> iFd<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">44.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>pucFileData <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  
<span class="token number">45.</span>	    <span class="token punctuation">{</span>  
<span class="token number">46.</span>	        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;mmap error!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">47.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">48.</span>	    <span class="token punctuation">}</span>  
<span class="token number">49.</span>	    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">50.</span>	<span class="token punctuation">}</span>  
<span class="token number">51.</span>	  
<span class="token number">52.</span>	<span class="token comment">/********************************************************************** 
53.	 * 函数名称： DecodeBmp2Rgb 
54.	 * 功能描述：把BMP文件转化为rgb格式 
55.	 * 输入参数： strFileName - 文件名 
56.	 *                   ptData - 内含图像信息 
57.	 * 返 回 值： 0      - 成功其他值 - 失败 
58.	 *                         -1     - 文件不是BMP格式 
59.	 *                         -2     - 不支持的bpp 
60.	 *                         -3     - 图像缓存区分配失败 
61.	 ***********************************************************************/</span>  
<span class="token number">62.</span>	<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">DecodeBmp2Rgb</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>strFileName<span class="token punctuation">,</span> PT_PictureData ptData<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">63.</span>	    <span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span>  
<span class="token number">64.</span>	    <span class="token keyword">int</span> iPos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">65.</span>	    <span class="token keyword">int</span> iLineWidthAlign<span class="token punctuation">;</span>  
<span class="token number">66.</span>	    BITMAPFILEHEADER <span class="token operator">*</span>ptBITMAPFILEHEADER<span class="token punctuation">;</span>  
<span class="token number">67.</span>	    BITMAPINFOHEADER <span class="token operator">*</span>ptBITMAPINFOHEADER<span class="token punctuation">;</span>  
<span class="token number">68.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>aFileHead<span class="token punctuation">;</span>  
<span class="token number">69.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>pucSrc<span class="token punctuation">;</span>  
<span class="token number">70.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>pucDest<span class="token punctuation">;</span>  
<span class="token number">71.</span>	    <span class="token keyword">int</span> iLineBytes<span class="token punctuation">;</span>  
<span class="token number">72.</span>	  
<span class="token number">73.</span>	    <span class="token comment">/* 判断该文件是否为BMP格式 */</span>  
<span class="token number">74.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsBmp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">,</span> strFileName<span class="token punctuation">)</span><span class="token punctuation">)</span>   
<span class="token number">75.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">76.</span>	  
<span class="token number">77.</span>	    <span class="token comment">/* 将BMP文件映射到内存空间 */</span>   
<span class="token number">78.</span>	    <span class="token function">MapFile</span><span class="token punctuation">(</span>ptData<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">79.</span>	  
<span class="token number">80.</span>	  
<span class="token number">81.</span>	    aFileHead <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>pucFileData<span class="token punctuation">;</span>  
<span class="token number">82.</span>	  
<span class="token number">83.</span>	    ptBITMAPFILEHEADER <span class="token operator">=</span> <span class="token punctuation">(</span>BITMAPFILEHEADER <span class="token operator">*</span><span class="token punctuation">)</span>aFileHead<span class="token punctuation">;</span>  
<span class="token number">84.</span>	    ptBITMAPINFOHEADER <span class="token operator">=</span> <span class="token punctuation">(</span>BITMAPINFOHEADER <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>aFileHead <span class="token operator">+</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>BITMAPFILEHEADER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">85.</span>	    <span class="token comment">/* 获取必要的图像信息 */</span>  
<span class="token number">86.</span>	    ptData<span class="token operator">-&gt;</span>iWidth <span class="token operator">=</span> ptBITMAPINFOHEADER<span class="token operator">-&gt;</span>biWidth<span class="token punctuation">;</span>  
<span class="token number">87.</span>	    ptData<span class="token operator">-&gt;</span>iHeight <span class="token operator">=</span> ptBITMAPINFOHEADER<span class="token operator">-&gt;</span>biHeight<span class="token punctuation">;</span>  
<span class="token number">88.</span>	    ptData<span class="token operator">-&gt;</span>iBpp <span class="token operator">=</span> ptBITMAPINFOHEADER<span class="token operator">-&gt;</span>biBitCount<span class="token punctuation">;</span>  
<span class="token number">89.</span>	        iLineBytes    <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span>ptData<span class="token operator">-&gt;</span>iBpp<span class="token operator">/</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token comment">//一行数据的字节数  </span>
<span class="token number">90.</span>	    ptData<span class="token operator">-&gt;</span>iBmpDataSize<span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>iHeight <span class="token operator">*</span> iLineBytes<span class="token punctuation">;</span><span class="token comment">//整个BMP图像的字节数  </span>
<span class="token number">91.</span>	    <span class="token comment">/*暂时只支持24bpp格式*/</span>  
<span class="token number">92.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iBpp <span class="token operator">!=</span> <span class="token number">24</span><span class="token punctuation">)</span>  
<span class="token number">93.</span>	    <span class="token punctuation">{</span>  
<span class="token number">94.</span>	        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;iBMPBpp = %d\\n&quot;</span><span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>iBpp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">95.</span>	        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;sizeof(BITMAPFILEHEADER) = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>BITMAPFILEHEADER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">96.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>  
<span class="token number">97.</span>	    <span class="token punctuation">}</span>  
<span class="token number">98.</span>	  
<span class="token number">99.</span>	    <span class="token comment">/* 分配空间 */</span>  
<span class="token number">100.</span>	    ptData<span class="token operator">-&gt;</span>pucBmpData <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iBmpDataSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">101.</span>	    ptData<span class="token operator">-&gt;</span>pucRgbData <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iBmpDataSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">102.</span>	      
<span class="token number">103.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> ptData<span class="token operator">-&gt;</span>pucBmpData<span class="token operator">||</span><span class="token constant">NULL</span> <span class="token operator">==</span> ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">)</span>  
<span class="token number">104.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>  
<span class="token number">105.</span>	  
<span class="token number">106.</span>	    <span class="token comment">/* 从bmp文件中读取图像信息，24bpp的BMP图像为BGR格式 */</span>  
<span class="token number">107.</span>	    pucDest <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>pucBmpData<span class="token punctuation">;</span>  
<span class="token number">108.</span>	    iLineWidthAlign <span class="token operator">=</span> <span class="token punctuation">(</span>iLineBytes <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token number">0x3</span><span class="token punctuation">;</span>   <span class="token comment">/* 向4取整 */</span>  
<span class="token number">109.</span>	    pucSrc <span class="token operator">=</span> aFileHead <span class="token operator">+</span> ptBITMAPFILEHEADER<span class="token operator">-&gt;</span>bfOffBits<span class="token punctuation">;</span>  
<span class="token number">110.</span>	  
<span class="token number">111.</span>	    pucSrc <span class="token operator">=</span> pucSrc <span class="token operator">+</span> <span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iHeight <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> iLineWidthAlign<span class="token punctuation">;</span>  
<span class="token number">112.</span>	  
<span class="token number">113.</span>	    <span class="token comment">/* 对于bmp文件中的源数据，是以左下角为原点计算坐标的，因此拷贝数据时需要转换坐标 */</span>  
<span class="token number">114.</span>	    <span class="token keyword">for</span> <span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span>  
<span class="token number">115.</span>	    <span class="token punctuation">{</span>         
<span class="token number">116.</span>	        <span class="token function">memcpy</span><span class="token punctuation">(</span>pucDest<span class="token punctuation">,</span> pucSrc<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">117.</span>	        pucSrc  <span class="token operator">-=</span> iLineWidthAlign<span class="token punctuation">;</span>  
<span class="token number">118.</span>	        pucDest <span class="token operator">+=</span> iLineBytes<span class="token punctuation">;</span>  
<span class="token number">119.</span>	    <span class="token punctuation">}</span>  
<span class="token number">120.</span>	  
<span class="token number">121.</span>	      
<span class="token number">122.</span>	    <span class="token comment">/* 将得到的BGR数据转化为RGB数据 */</span>  
<span class="token number">123.</span>	    <span class="token keyword">for</span> <span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          
<span class="token number">124.</span>	        <span class="token keyword">for</span><span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>x<span class="token operator">&lt;</span>ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">;</span>x<span class="token operator">+=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">125.</span>	            ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>pucBmpData<span class="token punctuation">[</span>y<span class="token operator">*</span>ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">126.</span>	            ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>pucBmpData<span class="token punctuation">[</span>y<span class="token operator">*</span>ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">127.</span>	            ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>pucBmpData<span class="token punctuation">[</span>y<span class="token operator">*</span>ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">128.</span>	        <span class="token punctuation">}</span>  
<span class="token number">129.</span>	    <span class="token punctuation">}</span>  
<span class="token number">130.</span>	      
<span class="token number">131.</span>	    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>     
<span class="token number">132.</span>	  
<span class="token number">133.</span>	<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-jpeg图像处理" tabindex="-1"><a class="header-anchor" href="#_2-2-jpeg图像处理" aria-hidden="true">#</a> 2.2 JPEG图像处理</h2><h3 id="_2-2-1-jpeg文件格式和libjpeg编译" tabindex="-1"><a class="header-anchor" href="#_2-2-1-jpeg文件格式和libjpeg编译" aria-hidden="true">#</a> 2.2.1 JPEG文件格式和libjpeg编译</h3><p>​ JPEG的后缀名为.jpg的图像文件。对于图像内容和信息相同的JPEG文件和BMP文件，JPEG格式的文件要比BMP格式的文件小得多，这是因为JPEG文件是经过JPEG压缩算法后得到的一种文件格式。</p><p>​ 相对于BMP格式的文件，JPEG由于压缩算法的关系，其文件解析较为复杂，我们可以利用Linux系统开源的优点，使用开源工具对jpeg文件进行格式的解析和转换。</p><p>​ 我们可以使用libjpeg库来对jpeg文件进行格式的解析和转换。libjpeg支持X86，ARM等架构。libjpeg是开源工具，所以可以在网上免费下载。</p><p>​ 在使用libjpeg之前，我们先要交叉编译libjpeg的库文件和头文件并存到开发板的文件系统中。以下是libjpeg的编译过程：</p><ol><li>解压并进入文件目录</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>tar xzf libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz
cd libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>交叉编译</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>tar xzf libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz
<span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">--</span>prefix<span class="token operator">=</span><span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token operator">/</span>tmp<span class="token operator">/</span> <span class="token operator">--</span>host<span class="token operator">=</span>arm<span class="token operator">-</span>linux
make
make install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将编译出来的头文件和库文件拷贝到交叉编译器的相应目录下</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>cd <span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token operator">/</span>tmp<span class="token operator">/</span>include
cp <span class="token operator">*</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>arm<span class="token operator">/</span><span class="token number">4.3</span><span class="token number">.2</span><span class="token operator">/</span>arm<span class="token operator">-</span>none<span class="token operator">-</span>linux<span class="token operator">-</span>gnueabi<span class="token operator">/</span>libc<span class="token operator">/</span>usr<span class="token operator">/</span>include
cd <span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token operator">/</span>tmp<span class="token operator">/</span>lib
cp <span class="token operator">*</span>so<span class="token operator">*</span> <span class="token operator">-</span>d <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>arm<span class="token operator">/</span><span class="token number">4.3</span><span class="token number">.2</span><span class="token operator">/</span>arm<span class="token operator">-</span>none<span class="token operator">-</span>linux<span class="token operator">-</span>gnueabi<span class="token operator">/</span>libc<span class="token operator">/</span>armv4t<span class="token operator">/</span>lib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>将编译出来的头文件和库文件拷贝到开发板文件系统的相应目录下</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>cd <span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libjpeg<span class="token operator">-</span>turbo<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token operator">/</span>tmp<span class="token operator">/</span>lib
cp <span class="token operator">*</span><span class="token punctuation">.</span>so<span class="token operator">*</span> <span class="token operator">/</span>work<span class="token operator">/</span>nfs_root<span class="token operator">/</span>fs_mini_mdev_new<span class="token operator">/</span>lib<span class="token operator">/</span> <span class="token operator">-</span>d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-2-libjpeg接口函数的解析和使用" tabindex="-1"><a class="header-anchor" href="#_2-2-2-libjpeg接口函数的解析和使用" aria-hidden="true">#</a> 2.2.2 libjpeg接口函数的解析和使用</h3><p>libjpeg的使用方法可以参考解压包中的使用说明libjpeg.txt和例程example.c。libjpeg的使用步骤简单总结如下：</p><p><strong>1.</strong> 分配和初始化一个jpeg_compress_struct结构体</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>cinfo<span class="token punctuation">.</span>err <span class="token operator">=</span> <span class="token function">jpeg_std_error</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>jerr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">jpeg_create_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.</strong> 指定源文件</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">jpeg_stdio_src</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">,</span> infile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数1是步骤1中分配的jpeg_compress_struct类型的结构体</p><p>参数2是要解析的JPEG文件的文件句柄。</p><p><strong>3.</strong> 获得jpg信息头并设置解压参数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">jpeg_read_header</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">,</span> TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当调用完这个参数之后，我们就可以通过cinfo中的image_width，image_height等成员来获得图像的信息了。此外我们还可以设置cinfo中的scale_num和scale_denom等成员变量来设置解压参数。</p><p><strong>4.</strong> 启动解压</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">jpeg_start_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>调用这个函数后，就可以对cinfo所指定的源文件进行解压，并将解压后的数据存到cinfo结构体的成员变量中。</p><p><strong>5.</strong> 读取解压后数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">jpeg_read_scanlines</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>调用这个函数后，可以读取RGB数据到buffer中，参数3能指定读取多少行</p><p><strong>6.</strong> 完成读取</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">jpeg_finish_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>7.</strong> 释放jpeg_compress_struct结构体</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">jpeg_destroy_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完成读取后释放结构体</p><h3 id="_2-2-3-使用libjpeg把jpeg文件解析为rgb格式-在lcd上显示" tabindex="-1"><a class="header-anchor" href="#_2-2-3-使用libjpeg把jpeg文件解析为rgb格式-在lcd上显示" aria-hidden="true">#</a> 2.2.3 使用libjpeg把JPEG文件解析为RGB格式，在LCD上显示</h3><p>根据上节的解析，利用上述的库函数将JPEG文件解析为RGB格式了。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>代码清单<span class="token number">2.2</span>
<span class="token number">1.</span>	<span class="token comment">/********************************************************************** 
2.	 * 函数名称： IsJpg 
3.	 * 功能描述：判断是否为Jpg文件 
4.	 * 输入参数： ptData - 内含图像信息 
5.	                    strFileName - 文件名 
6.	 * 返 回 值：0 - 不是JPG格式 其他-是JPG格式 
7.	 ***********************************************************************/</span>  
<span class="token number">8.</span>	<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">IsJpg</span><span class="token punctuation">(</span>PT_PictureData ptData<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>strFileName<span class="token punctuation">)</span>   
<span class="token number">9.</span>	<span class="token punctuation">{</span>  
<span class="token number">10.</span>	    <span class="token keyword">int</span> iRet<span class="token punctuation">;</span>  
<span class="token number">11.</span>	  
<span class="token number">12.</span>	    <span class="token function">jpeg_stdio_src</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">13.</span>	  
<span class="token number">14.</span>	    <span class="token comment">/* 用jpeg_read_header获得jpeg信息*/</span>  
<span class="token number">15.</span>	    iRet <span class="token operator">=</span> <span class="token function">jpeg_read_header</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">,</span> TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">16.</span>	      
<span class="token number">17.</span>	        <span class="token keyword">return</span> <span class="token punctuation">(</span>iRet <span class="token operator">==</span> JPEG_HEADER_OK<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">18.</span>	<span class="token punctuation">}</span>  
<span class="token number">19.</span>	  
<span class="token number">20.</span>	<span class="token comment">/********************************************************************** 
21.	 * 函数名称： DecodeJpg2Rgb 
22.	 * 功能描述：把JPG文件解析为RGB888格式 
23.	 * 输入参数： ptData - 内含文件信息 
24.	 *                             strFileName - 文件名 
25.	 * 输出参数：PT_PictureData-&gt;pucRgbData - 内含rgb数据 
26.	 * 返 回 值：0 - 成功 其他-失败 
27.	 ***********************************************************************/</span>  
<span class="token number">28.</span>	<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">DecodeJpg2Rgb</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>strFileName<span class="token punctuation">,</span> PT_PictureData ptData<span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">29.</span>	    <span class="token keyword">int</span> iRowSize<span class="token punctuation">;</span>  
<span class="token number">30.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>pucbuffer<span class="token punctuation">;</span>  
<span class="token number">31.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>pucHelp<span class="token punctuation">;</span><span class="token comment">//辅助拷贝变量  </span>
<span class="token number">32.</span>	      
<span class="token number">33.</span>	    <span class="token comment">/* 1.分配和初始化一个jpeg_compress_struct结构体 */</span>  
<span class="token number">34.</span>	    ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>err <span class="token operator">=</span> <span class="token function">jpeg_std_error</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tJerr<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">35.</span>	    <span class="token function">jpeg_create_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">36.</span>	  
<span class="token number">37.</span>	  
<span class="token number">38.</span>	    <span class="token comment">/* 2.指定源文件*/</span>  
<span class="token number">39.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>strFileName<span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">40.</span>	        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;can&#39;t open %s\\n&quot;</span><span class="token punctuation">,</span> strFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">41.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">42.</span>	    <span class="token punctuation">}</span>  
<span class="token number">43.</span>	  
<span class="token number">44.</span>	    <span class="token comment">/* 3.获得jpg信息头并设置解压参数并判断是否为JPEG格式文件 */</span>  
<span class="token number">45.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsJpg</span><span class="token punctuation">(</span>ptData<span class="token punctuation">,</span> strFileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">46.</span>	    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;file is not jpg ...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">47.</span>	    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">48.</span>	    <span class="token punctuation">}</span>   
<span class="token number">49.</span>	  
<span class="token number">50.</span>	      
<span class="token number">51.</span>	  
<span class="token number">52.</span>	    <span class="token comment">/* 默认尺寸为原尺寸 */</span>  
<span class="token number">53.</span>	    ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>scale_num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">54.</span>	    ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>scale_denom <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">55.</span>	    <span class="token comment">/* 4. 启动解压：jpeg_start_decompress */</span>   
<span class="token number">56.</span>	    <span class="token function">jpeg_start_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">57.</span>	  
<span class="token number">58.</span>	  
<span class="token number">59.</span>	    <span class="token comment">/* 解压完成后可以通过tInfo中的成员获得图像的某些信息 */</span>  
<span class="token number">60.</span>	    ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>output_width<span class="token punctuation">;</span>  
<span class="token number">61.</span>	    ptData<span class="token operator">-&gt;</span>iHeight <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>output_height<span class="token punctuation">;</span>  
<span class="token number">62.</span>	    ptData<span class="token operator">-&gt;</span>iBpp <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>output_components<span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">;</span>  
<span class="token number">63.</span>	    <span class="token comment">/* 计算一行的数据长度 */</span>   
<span class="token number">64.</span>	    iRowSize <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>iWidth <span class="token operator">*</span> ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>output_components<span class="token punctuation">;</span>  
<span class="token number">65.</span>	    pucbuffer <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>iRowSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">66.</span>	    ptData<span class="token operator">-&gt;</span>iRgbSize<span class="token operator">=</span> iRowSize <span class="token operator">*</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token punctuation">;</span>  
<span class="token number">67.</span>	    ptData<span class="token operator">-&gt;</span>pucRgbData <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iRgbSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">68.</span>	  
<span class="token number">69.</span>	    <span class="token comment">/* pucHelp指向ptData-&gt;pucRgbData首地址 */</span>  
<span class="token number">70.</span>	    pucHelp <span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">;</span>  
<span class="token number">71.</span>	    <span class="token comment">/*  5.循环调用jpeg_read_scanlines来一行一行地获得解压的数据 */</span>  
<span class="token number">72.</span>	    <span class="token keyword">while</span> <span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>output_scanline <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">.</span>output_height<span class="token punctuation">)</span>   
<span class="token number">73.</span>	    <span class="token punctuation">{</span>  
<span class="token number">74.</span>	        <span class="token comment">/* 调用jpeg_read_scanlines得到的时候会存到pucbuffer中 */</span>  
<span class="token number">75.</span>	        <span class="token function">jpeg_read_scanlines</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pucbuffer<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">76.</span>	        <span class="token comment">/* 将数据一行行读到缓冲区中 */</span>  
<span class="token number">77.</span>	        <span class="token function">memcpy</span><span class="token punctuation">(</span>pucHelp<span class="token punctuation">,</span>pucbuffer<span class="token punctuation">,</span>iRowSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">78.</span>	        pucHelp  <span class="token operator">+=</span> iRowSize<span class="token punctuation">;</span>  
<span class="token number">79.</span>	    <span class="token punctuation">}</span>  
<span class="token number">80.</span>	    <span class="token function">free</span><span class="token punctuation">(</span>pucbuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">81.</span>	    <span class="token comment">/* 6.完成读取 */</span>  
<span class="token number">82.</span>	    <span class="token function">jpeg_finish_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">83.</span>	    <span class="token comment">/* 7.释放jpeg_compress_struct结构体 */</span>  
<span class="token number">84.</span>	    <span class="token function">jpeg_destroy_decompress</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>tInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">85.</span>	    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">86.</span>	<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-png图像处理" tabindex="-1"><a class="header-anchor" href="#_2-3-png图像处理" aria-hidden="true">#</a> 2.3 PNG图像处理</h2><h3 id="_2-3-1-png文件格式和libpng编译" tabindex="-1"><a class="header-anchor" href="#_2-3-1-png文件格式和libpng编译" aria-hidden="true">#</a> 2.3.1 PNG文件格式和libpng编译</h3><p>​ 跟JPEG文件格式一样，PNG也是一种使用了算法压缩后的图像格式，与JPEG不同，PNG使用从LZ77派生的无损数据压缩算法。对于PNG文件格式，也有相应的开源工具libpng。</p><p>libpng库可从官网上下载最新的源代码：</p><p>http://www.libpng.org/pub/png/libpng.html</p><p>在使用libpng之前，我们先要交叉编译libpng的库文件和头文件并存到开发板的文件系统中。以下是libpng的编译过程：</p><ol><li>解压并进入文件目录</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>tar xzf libpng<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.37</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz
cd libpng<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.37</span><span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>交叉编译</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">--</span>prefix<span class="token operator">=</span><span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libpng<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.37</span><span class="token operator">/</span>tmp<span class="token operator">/</span> <span class="token operator">--</span>host<span class="token operator">=</span>arm<span class="token operator">-</span>linux
make
make install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将编译出来的头文件和库文件拷贝到交叉编译器的相应目录下</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>cd <span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libpng<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.37</span><span class="token operator">/</span>tmp<span class="token operator">/</span>include
cp <span class="token operator">*</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>arm<span class="token operator">/</span><span class="token number">4.3</span><span class="token number">.2</span><span class="token operator">/</span>arm<span class="token operator">-</span>none<span class="token operator">-</span>linux<span class="token operator">-</span>gnueabi<span class="token operator">/</span>libc<span class="token operator">/</span>usr<span class="token operator">/</span>include
cd <span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libpng<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.37</span><span class="token operator">/</span>tmp<span class="token operator">/</span>lib
cp <span class="token operator">*</span>so<span class="token operator">*</span> <span class="token operator">-</span>d <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>arm<span class="token operator">/</span><span class="token number">4.3</span><span class="token number">.2</span><span class="token operator">/</span>arm<span class="token operator">-</span>none<span class="token operator">-</span>linux<span class="token operator">-</span>gnueabi<span class="token operator">/</span>libc<span class="token operator">/</span>armv4t<span class="token operator">/</span>lib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>将编译出来的头文件和库文件拷贝到开发板文件系统的相应目录下</li></ol><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>cd <span class="token operator">/</span>work<span class="token operator">/</span>projects<span class="token operator">/</span>libpng<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.37</span><span class="token operator">/</span>tmp<span class="token operator">/</span>lib
cp <span class="token operator">*</span><span class="token punctuation">.</span>so<span class="token operator">*</span> <span class="token operator">/</span>work<span class="token operator">/</span>nfs_root<span class="token operator">/</span>fs_mini_mdev_new<span class="token operator">/</span>lib<span class="token operator">/</span> <span class="token operator">-</span>d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-2-libpng接口函数的解析和使用" tabindex="-1"><a class="header-anchor" href="#_2-3-2-libpng接口函数的解析和使用" aria-hidden="true">#</a> 2.3.2 libpng接口函数的解析和使用</h3><p>libpng的使用方法可以参考解压包中的使用说明libpng-manual.txt和例程example.c。libjpeg的使用步骤简单总结如下：</p><ol><li><p>分配和初始化两个与libpng相关的结构体png_ptr，info_ptr</p><p>A. png_ptr = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);</p><p>​ 参数2，3，4分别是用户自定义的错误处理函数，若无，则填NULL。</p></li></ol><p>​ B. info_ptr = png_create_info_struct(png_ptr);</p><ol start="2"><li><p>设置错误返回点</p><p>setjmp(png_jmpbuf(png_ptr));</p><p>当出现错误时，libpng将会自动调用返回到这个点。在这个点我们可以进行一些清理工作。如果在调用png_create_read_struct时没有设置自定义的错误处理函数，这一步是必须要做的。</p></li><li><p>指定源文件</p><p>png_init_io(png_ptr, fp);</p><p>参数1是步骤1中分配的png_ptr结构体，参数2是需要解析的PNG文件的文件句柄。</p></li><li><p>获取PNG图像的信息</p><p>A. 解析图片数据信息</p><p>png_read_png(png_ptr, info_ptr, png_transforms, png_voidp_NULL);</p><p>该函数会把所有的图片数据解码到info_ptr数据结构中。至于转化为什么格式，由参数png_transforms决定，它是一个整型参数，可以使用libpng库中定义的宏进行传参。这个参数相关的宏有很多，具体的可以参考库中的相关文件的解析。</p><p>B.查询图像信息</p></li></ol><p>此外，我们还可以通过png_get_image_width，png_get_image_height，png_get_color_type等函数获得png图像的宽度，高度，颜色类型等信息，更多的图像信息获取函数可以在文件pngget.c中找到。</p><ol start="5"><li><p>将info_ptr中的图像数据读取出来</p><p>有两种读取PNG图像信息的方法：</p><p>A. 一次性把所有的数据读入内存</p><p>png_read_image(png_ptr, row_pointers);</p><p>参数1是步骤1中分配的png_ptr，参数2是存放图片数据的指针。</p><p>B. 也可以逐行读取</p><p>row_pointers = png_get_rows(png_ptr, info_ptr);</p><p>参数1和参数2分别是步骤1中分配的png_ptr, info_ptr，返回值是每行数据的首地址。</p><p>参数1是步骤1中分配的png_ptr，参数2是存放图片数据的指针。</p></li><li><p>销毁内存</p><p>png_destroy_read_struct(&amp;png_ptr, &amp;info_ptr, 0);</p></li></ol><h3 id="_2-3-3-使用libpng把png文件转为rgb格式-在lcd上显示" tabindex="-1"><a class="header-anchor" href="#_2-3-3-使用libpng把png文件转为rgb格式-在lcd上显示" aria-hidden="true">#</a> 2.3.3 使用libpng把png文件转为rgb格式，在LCD上显示</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>代码清单<span class="token number">2.3</span>
<span class="token number">1.</span>	<span class="token comment">/********************************************************************** 
2.	 * 函数名称： IsnotPng 
3.	 * 功能描述：判断是否为PNG文件 
4.	 * 输入参数： ppFp - 文件句柄指针 
5.	                    strFileName - 文件名 
6.	 * 返 回 值：0 - 是PNG格式 其他-不是PNG格式 
7.	 ***********************************************************************/</span>  
<span class="token number">8.</span>	<span class="token keyword">int</span> <span class="token function">IsnotPng</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token operator">*</span>ppFp<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>strFileName<span class="token punctuation">)</span>   
<span class="token number">9.</span>	<span class="token punctuation">{</span>  
<span class="token number">10.</span>	    <span class="token keyword">char</span> strCheckHeader<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   
<span class="token number">11.</span>	    <span class="token operator">*</span>ppFp<span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>strFileName<span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">12.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>ppFp<span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">13.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">14.</span>	    <span class="token punctuation">}</span>  
<span class="token number">15.</span>	    <span class="token comment">/* 读取PNG文件前8个字节，使用库函数png_sig_cmp即可判断是否为PNG格式 */</span>  
<span class="token number">16.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fread</span><span class="token punctuation">(</span>strCheckHeader<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">*</span>ppFp<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">8</span><span class="token punctuation">)</span>   
<span class="token number">17.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">18.</span>	    <span class="token keyword">return</span> <span class="token function">png_sig_cmp</span><span class="token punctuation">(</span>strCheckHeader<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token number">19.</span>	  
<span class="token number">20.</span>	<span class="token punctuation">}</span>  
<span class="token number">21.</span>	  
<span class="token number">22.</span>	<span class="token comment">/********************************************************************** 
23.	 * 函数名称： DecodePng2Rgb 
24.	 * 功能描述：把PNG文件解析为RGB888格式 
25.	 * 输入参数： ptData - 内含文件信息 
26.	 *                             strFileName - 文件名 
27.	 * 输出参数：PT_PictureData-&gt;pucRgbData - 内含rgb数据 
28.	 * 返 回 值：0 - 成功 其他-失败 
29.	 ***********************************************************************/</span>  
<span class="token number">30.</span>	<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">DecodePng2Rgb</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>strFileName<span class="token punctuation">,</span> PT_PictureData ptData<span class="token punctuation">)</span>   
<span class="token number">31.</span>	<span class="token punctuation">{</span>      
<span class="token number">32.</span>	    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>  
<span class="token number">33.</span>	    <span class="token keyword">int</span> iPos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">34.</span>	    png_bytepp pucPngData<span class="token punctuation">;</span>   
<span class="token number">35.</span>	    <span class="token comment">/* 0.判断该文件是否为PNG格式 */</span>  
<span class="token number">36.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsnotPng</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">,</span> strFileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">37.</span>	        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;file is not png ...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">38.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">39.</span>	    <span class="token punctuation">}</span>   
<span class="token number">40.</span>	  
<span class="token number">41.</span>	    <span class="token comment">/* 1.分配和初始化两个与libpng相关的结构体png_ptr，info_ptr */</span>  
<span class="token number">42.</span>	    ptData<span class="token operator">-&gt;</span>ptPngStrPoint  <span class="token operator">=</span> <span class="token function">png_create_read_struct</span><span class="token punctuation">(</span>PNG_LIBPNG_VER_STRING<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token number">43.</span>	    ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token operator">=</span> <span class="token function">png_create_info_struct</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">44.</span>	  
<span class="token number">45.</span>	    <span class="token comment">/* 2.设置错误的返回点 */</span>  
<span class="token number">46.</span>	    <span class="token function">setjmp</span><span class="token punctuation">(</span><span class="token function">png_jmpbuf</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">47.</span>	    <span class="token function">rewind</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//等价fseek(fp, 0, SEEK_SET);  </span>
<span class="token number">48.</span>	  
<span class="token number">49.</span>	    <span class="token comment">/* 3.指定源文件 */</span>  
<span class="token number">50.</span>	    <span class="token function">png_init_io</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">51.</span>	  
<span class="token number">52.</span>	    <span class="token comment">/* 4.获取PNG图像数据信息和通道数，宽度，高度等  
53.	      * 使用PNG_TRANSFORM_EXPAND宏做参数的作用是根据通道数的不同， 
54.	      * 将PNG图像转换为BGR888或ABGR8888格式*/</span>  
<span class="token number">55.</span>	    <span class="token function">png_read_png</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">,</span> PNG_TRANSFORM_EXPAND<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token number">56.</span>	    ptData<span class="token operator">-&gt;</span>iChannels    <span class="token operator">=</span> <span class="token function">png_get_channels</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token number">57.</span>	    ptData<span class="token operator">-&gt;</span>iWidth    <span class="token operator">=</span> <span class="token function">png_get_image_width</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">58.</span>	    ptData<span class="token operator">-&gt;</span>iHeight  <span class="token operator">=</span> <span class="token function">png_get_image_height</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">59.</span>	  
<span class="token number">60.</span>	  
<span class="token number">61.</span>	    <span class="token comment">/* 5.将info_ptr中的图像数据读取出来 */</span>  
<span class="token number">62.</span>	    pucPngData <span class="token operator">=</span> <span class="token function">png_get_rows</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//也可以分别每一行获取png_get_rowbytes();  </span>
<span class="token number">63.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iChannels <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//判断是24位还是32位  </span>
<span class="token number">64.</span>	        ptData<span class="token operator">-&gt;</span>iRawSize<span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>iWidth <span class="token operator">*</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">//申请内存先计算空间    </span>
<span class="token number">65.</span>	        ptData<span class="token operator">-&gt;</span>pucRawData<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iRawSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">66.</span>	        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> ptData<span class="token operator">-&gt;</span>pucRawData<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">67.</span>	            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;malloc rgba faile ...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">68.</span>	            <span class="token function">png_destroy_read_struct</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">69.</span>	            <span class="token function">fclose</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">70.</span>	            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">71.</span>	        <span class="token punctuation">}</span>  
<span class="token number">72.</span>	        <span class="token comment">/* 从pucPngData里读出实际的RGBA数据出来  
73.	         * 源数据为ABGR格式*/</span>  
<span class="token number">74.</span>	        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>   
<span class="token number">75.</span>	            <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>iWidth <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span> j <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">76.</span>	                    ptData<span class="token operator">-&gt;</span>pucRawData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">77.</span>	                    ptData<span class="token operator">-&gt;</span>pucRawData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">78.</span>	                    ptData<span class="token operator">-&gt;</span>pucRawData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">79.</span>	                    ptData<span class="token operator">-&gt;</span>pucRawData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">80.</span>	                <span class="token punctuation">}</span>  
<span class="token number">81.</span>	  
<span class="token number">82.</span>	        <span class="token comment">/* 将得到的RGBA转换为RGB888格式 */</span>  
<span class="token number">83.</span>	        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">RgbaToRgb</span><span class="token punctuation">(</span>ptData<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>  
<span class="token number">84.</span>	            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">85.</span>	  
<span class="token number">86.</span>	    <span class="token punctuation">}</span>  
<span class="token number">87.</span>	    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iChannels <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//判断颜色深度是24位还是32位  </span>
<span class="token number">88.</span>	        ptData<span class="token operator">-&gt;</span>iRgbSize<span class="token operator">=</span> ptData<span class="token operator">-&gt;</span>iWidth <span class="token operator">*</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">//申请内存先计算空间    </span>
<span class="token number">89.</span>	        ptData<span class="token operator">-&gt;</span>pucRgbData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>iRgbSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">90.</span>	        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">91.</span>	            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;malloc rgba faile ...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">92.</span>	            <span class="token function">png_destroy_read_struct</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">93.</span>	            <span class="token function">fclose</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">94.</span>	            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">95.</span>	        <span class="token punctuation">}</span>  
<span class="token number">96.</span>	        <span class="token comment">/* 从pucPngData里读出实际的RGB数据 
97.	          * 源数据为BGR格式*/</span>  
<span class="token number">98.</span>	        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>iHeight<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">99.</span>	            <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> ptData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">;</span> j <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
<span class="token number">100.</span>	                ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">101.</span>	                ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">102.</span>	                ptData<span class="token operator">-&gt;</span>pucRgbData<span class="token punctuation">[</span>iPos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> pucPngData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token number">103.</span>	            <span class="token punctuation">}</span>  
<span class="token number">104.</span>	        <span class="token punctuation">}</span>  
<span class="token number">105.</span>	        ptData<span class="token operator">-&gt;</span>iBpp <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span><span class="token comment">//转化之后的格式为RGB888格式  </span>
<span class="token number">106.</span>	    <span class="token punctuation">}</span>   
<span class="token number">107.</span>	    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>   
<span class="token number">108.</span>	  
<span class="token number">109.</span>	      
<span class="token number">110.</span>	    <span class="token comment">/* 6:销毁内存 */</span>  
<span class="token number">111.</span>	    <span class="token function">png_destroy_read_struct</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptPngStrPoint<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ptData<span class="token operator">-&gt;</span>ptPngInfoPoint<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">112.</span>	    <span class="token function">fclose</span><span class="token punctuation">(</span>ptData<span class="token operator">-&gt;</span>ptFp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">113.</span>	  
<span class="token number">114.</span>	  
<span class="token number">115.</span>	    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">116.</span>	<span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-4-图像调整" tabindex="-1"><a class="header-anchor" href="#_2-4-图像调整" aria-hidden="true">#</a> 2.4 图像调整</h2><h3 id="_2-4-1-图像的缩放" tabindex="-1"><a class="header-anchor" href="#_2-4-1-图像的缩放" aria-hidden="true">#</a> 2.4.1 图像的缩放</h3><h4 id="_2-4-1-1-图像缩放算法浅析" tabindex="-1"><a class="header-anchor" href="#_2-4-1-1-图像缩放算法浅析" aria-hidden="true">#</a> 2.4.1.1 图像缩放算法浅析</h4><p>图像缩放算法有很多种，这里参考网友&quot;lantianyu520&quot;所著的&quot;图像缩放算法&quot;。</p><p>原理浅析</p><p>​ 要理解这个图像缩放算法的原理，最重要的是需要理解：对于图像上的每一个像素点，它缩放前后，相对于整个图像的比例应该是一样的。</p><p>比如：</p><p>​ 以一个长度和宽度分别为200，100的长方形为例，将其放大两倍，那么缩放后的长度和宽度为400，200。</p><p>为方便理解，我们建立一个笛卡尔坐标系，把这个长方形左下角的顶点放到坐标(0,0)位置，四个点的坐标分别为：(0,0),(0,100),(200,0),(200,100)。</p><p>​ 假设此时对长方形中的坐标点(40,50)，它的x坐标相对于长的比值是40/200=0.2，y坐标相对于宽的比值是50/100=0.5，那么该点的变换后的坐标Dx,Dy则应满足：Dx/400 = 5;Dy/200 = 0.5，这样，缩放后的坐标就可以算出来了。</p><p>​ 根据上面的分析，设缩放前的像素点坐标为(Sx,Sy)，对应的缩放后的像素点坐标为(Dx,Dy)，缩放前的图像长宽分别为Sw,Sh，缩放后的图像长宽分别为Dw,Dh，则有：</p><p>Sx/Dx = Sw/Dw，Sy/Dy = Sh/Dh</p><p>故有Sx = Dx * Sw/Dw，Sy = Dy * Sh/Dh，</p><h4 id="_2-4-1-2源码编写-图像缩放算法" tabindex="-1"><a class="header-anchor" href="#_2-4-1-2源码编写-图像缩放算法" aria-hidden="true">#</a> 2.4.1.2源码编写：图像缩放算法</h4><p>有了这个上面两条等式后，图像缩放算法的代码就好理解了。</p><p>下面的函数实现了基于上述原理实现的图像缩放算法：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>代码清单<span class="token number">2.4</span>
<span class="token number">1.</span>	<span class="token comment">/********************************************************************** 
2.	 * 函数名称： PicZoom 
3.	 * 功能描述： 近邻取样插值方法缩放图片 
4.	 *            注意该函数会分配内存来存放缩放后的图片,用完后要用free函数释放掉 
5.	 *            &quot;近邻取样插值&quot;的原理请参考网友&quot;lantianyu520&quot;所著的&quot;图像缩放算法&quot; 
6.	 * 输入参数： ptPicData - 内含缩放前后的图像数据 
7.	 *            fSize    - 缩放倍数 
8.	 * 输出参数： ptPicData-&gt;pucZoomData,内含缩放后的数据 
9.	 * 返 回 值： 0 - 成功, 其他值 - 失败 
10.	 ***********************************************************************/</span>  
<span class="token number">11.</span>	<span class="token keyword">int</span> <span class="token function">PicZoom</span><span class="token punctuation">(</span>PT_PictureData ptPicData<span class="token punctuation">,</span><span class="token keyword">float</span> fSize<span class="token punctuation">)</span>  
<span class="token number">12.</span>	<span class="token punctuation">{</span>  
<span class="token number">13.</span>	    ptPicData<span class="token operator">-&gt;</span>iZoomWidth <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iWidth <span class="token operator">*</span> fSize<span class="token punctuation">;</span>  
<span class="token number">14.</span>	    ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iHeight<span class="token operator">*</span> fSize<span class="token punctuation">;</span>  
<span class="token number">15.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token operator">*</span> pdwSrcXTable<span class="token punctuation">;</span>  
<span class="token number">16.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> x<span class="token punctuation">;</span>  
<span class="token number">17.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> y<span class="token punctuation">;</span>  
<span class="token number">18.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> dwSrcY<span class="token punctuation">;</span>  
<span class="token number">19.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>pucDest<span class="token punctuation">;</span>  
<span class="token number">20.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>pucSrc<span class="token punctuation">;</span>  
<span class="token number">21.</span>	    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> dwPixelBytes <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iBpp<span class="token operator">/</span><span class="token number">8</span><span class="token punctuation">;</span>  
<span class="token number">22.</span>	    ptPicData<span class="token operator">-&gt;</span>pucZoomData<span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token operator">*</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token operator">*</span>ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token operator">*</span>ptPicData<span class="token operator">-&gt;</span>iBpp<span class="token operator">/</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">23.</span>	    pdwSrcXTable <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token operator">*</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">24.</span>	    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> pdwSrcXTable<span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">25.</span>	        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;malloc error!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">26.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">27.</span>	    <span class="token punctuation">}</span>  
<span class="token number">28.</span>	  
<span class="token number">29.</span>	    <span class="token comment">/* 这几个for循环的本质是Sx = Dx * Sw/Dw，Sy = Dy * Sh/Dh*/</span>  
<span class="token number">30.</span>	    <span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//生成表 pdwSrcXTable  </span>
<span class="token number">31.</span>	        <span class="token comment">/* 第一个for循环对应x方向的坐标 
32.	     * pdwSrcXTable[x] 对应Sx, 
33.	     * x 对应Dx, 
34.	     * ptPicData-&gt;iWidth 对应Sw 
35.	     * ptPicData-&gt;iZoomWidth 对应 Dw*/</span>   
<span class="token number">36.</span>	        pdwSrcXTable<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">*</span>ptPicData<span class="token operator">-&gt;</span>iWidth<span class="token operator">/</span>ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">37.</span>	    <span class="token punctuation">}</span>  
<span class="token number">38.</span>	  
<span class="token number">39.</span>	    <span class="token keyword">for</span> <span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">40.</span>	    <span class="token comment">/* 第2个循环对应y方向的坐标 
41.	     * dwSrcY 对应Sy, 
42.	     * y 对应Dy, 
43.	     * ptPicData-&gt;iHeight 对应Sh 
44.	     * ptPicData-&gt;iZoomHeight 对应 Dh*/</span>      
<span class="token number">45.</span>	        dwSrcY <span class="token operator">=</span> <span class="token punctuation">(</span>y <span class="token operator">*</span> ptPicData<span class="token operator">-&gt;</span>iHeight <span class="token operator">/</span> ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">46.</span>	    <span class="token comment">/* 根据这些可算得各像素点的RGB数据存放的地址 */</span>  
<span class="token number">47.</span>	        pucDest <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>pucZoomData <span class="token operator">+</span> y<span class="token operator">*</span>ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">;</span>  
<span class="token number">48.</span>	        pucSrc  <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>pucRgbData <span class="token operator">+</span> dwSrcY<span class="token operator">*</span>ptPicData<span class="token operator">-&gt;</span>iWidth<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">;</span>  
<span class="token number">49.</span>	  
<span class="token number">50.</span>	    <span class="token comment">/* 最后拷贝数据 */</span>          
<span class="token number">51.</span>	        <span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span>ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">52.</span>	             <span class="token function">memcpy</span><span class="token punctuation">(</span>pucDest<span class="token operator">+</span>x<span class="token operator">*</span>dwPixelBytes<span class="token punctuation">,</span> pucSrc<span class="token operator">+</span>pdwSrcXTable<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">*</span>dwPixelBytes<span class="token punctuation">,</span> dwPixelBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">53.</span>	        <span class="token punctuation">}</span>  
<span class="token number">54.</span>	    <span class="token punctuation">}</span>  
<span class="token number">55.</span>	  
<span class="token number">56.</span>	    <span class="token function">free</span><span class="token punctuation">(</span>pdwSrcXTable<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">57.</span>	    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">58.</span>	<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-2-图像的旋转" tabindex="-1"><a class="header-anchor" href="#_2-4-2-图像的旋转" aria-hidden="true">#</a> 2.4.2 图像的旋转</h3><h4 id="_2-4-2-1-图像旋转算法浅析" tabindex="-1"><a class="header-anchor" href="#_2-4-2-1-图像旋转算法浅析" aria-hidden="true">#</a> 2.4.2.1 图像旋转算法浅析</h4><p>这里的图像旋转算法原理参考网友&quot;落叶的思维&quot;所著的&quot;图像旋转算法与实现&quot;</p><p>原理浅析</p><p>这个旋转算法的原理的关键点有两个：</p><ol><li>原图像是以图像的左下角为原点建立笛卡尔坐标系的，而旋转一般是以图像的中心作为旋转点旋转的。</li></ol><p>因此为了便于转换，我们先约定两个坐标系，一个是以图像左下角为原点建立的坐标系，称为坐标系A，这也是原图像的坐标系。一个是以图像中心为原点建立的坐标系，称为坐标系B。</p><p>由此，可以知道这个旋转算法的步骤：先将坐标系A下的坐标转换为坐标系B下的坐标，然后在坐标系B下进行图像的旋转。</p><p>在坐标系B下，我们假设点（x0，y0）距离原点的距离为r，点与原点之间的连线与x轴的夹角为b，旋转的角度为a，旋转后的点为（x1，y1）, 如下图所示。</p><p><img src="http://photos.100ask.net/NewHomeSite/ImageProcess_Image005.jpeg" alt="ImageProcess_Image005"></p><p>那么有以下结论：</p><p>x0=rcosb；y0=rsinb</p><p>x1 = rcos(b-a) = rcosbcosa+rsinbsina=x0cosa+y0sina；</p><p>y1=rsin(b-a)=rsinbcosa-rcosbsina=-x0sina+y0cosa；</p><p>最后，由于我们显示图像的RGB数据还是要在坐标系A下获取的，我们最后只需要将坐标系B下的x1,y1转换回坐标系A下的坐标就可以了。</p><p>旋转后的图像的长和宽会发生变化，因此要计算新图像的长和宽。</p><p>由几何关系可知，新图像的长和宽分别是旋转后，对角坐标相见后的最大值</p><h4 id="_2-4-2-2-源码编写-图像旋转算法" tabindex="-1"><a class="header-anchor" href="#_2-4-2-2-源码编写-图像旋转算法" aria-hidden="true">#</a> 2.4.2.2 源码编写：图像旋转算法</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>代码清单<span class="token number">2.5</span>
<span class="token number">1.</span>	 #define PI <span class="token number">3.1415926535</span>  
<span class="token number">2.</span>	<span class="token comment">//角度到弧度转化  </span>
<span class="token number">3.</span>	#define <span class="token function">RADIAN</span><span class="token punctuation">(</span>angle<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token operator">*</span>PI<span class="token operator">/</span><span class="token number">180.0</span><span class="token punctuation">)</span>  
<span class="token number">4.</span>	  
<span class="token number">5.</span>	  
<span class="token number">6.</span>	  
<span class="token number">7.</span>	  
<span class="token number">8.</span>	  
<span class="token number">9.</span>	<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">ConcernCoor</span> <span class="token punctuation">{</span>  
<span class="token number">10.</span>	    <span class="token keyword">int</span> iLTx<span class="token punctuation">;</span><span class="token comment">// left top x  </span>
<span class="token number">11.</span>	    <span class="token keyword">int</span> iLTy<span class="token punctuation">;</span><span class="token comment">//left top y  </span>
<span class="token number">12.</span>	    <span class="token keyword">int</span> iLBx<span class="token punctuation">;</span><span class="token comment">//left bottom x  </span>
<span class="token number">13.</span>	    <span class="token keyword">int</span> iLBy<span class="token punctuation">;</span><span class="token comment">//left bottom y  </span>
<span class="token number">14.</span>	    <span class="token keyword">int</span> iRTx<span class="token punctuation">;</span><span class="token comment">//right top x  </span>
<span class="token number">15.</span>	    <span class="token keyword">int</span> iRTy<span class="token punctuation">;</span><span class="token comment">//right top y  </span>
<span class="token number">16.</span>	    <span class="token keyword">int</span> iRBx<span class="token punctuation">;</span><span class="token comment">// right bottom x  </span>
<span class="token number">17.</span>	    <span class="token keyword">int</span> iRBy<span class="token punctuation">;</span><span class="token comment">// right bottom y  </span>
<span class="token number">18.</span>	<span class="token punctuation">}</span>T_ConcernCoor<span class="token punctuation">,</span> <span class="token operator">*</span>PT_ConcernCoor<span class="token punctuation">;</span>  
<span class="token number">19.</span>	  
<span class="token number">20.</span>	  
<span class="token number">21.</span>	<span class="token comment">/********************************************************************** 
22.	 * 函数名称： max 
23.	 * 功能描述：比较两个参数，返回较大值 
24.	 * 输入参数：x，y均为int型 
25.	 * 输出参数： 无 
26.	 * 返 回 值： x，y中的较大值 
27.	 ***********************************************************************/</span>  
<span class="token number">28.</span>	<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">29.</span>	    <span class="token keyword">return</span> x<span class="token operator">&gt;</span>y<span class="token operator">?</span>x<span class="token operator">:</span>y<span class="token punctuation">;</span>  
<span class="token number">30.</span>	<span class="token punctuation">}</span>  
<span class="token number">31.</span>	<span class="token comment">/********************************************************************** 
32.	 * 函数名称： PicRotate 
33.	 * 功能描述： 旋转图片 
34.	 *            注意该函数会分配内存来存放缩放后的图片,用完后要用free函数释放掉 
35.	 *              参考网友&quot;落叶的思维&quot;所著的&quot;图像旋转算法与实现&quot; 
36.	 * 输入参数： ptPicData - 内含图片的象素数据 
37.	 *            fAngle    - 旋转角度，0&lt;=angle&lt;=360 
38.	 * 输出参数： ptPicData-&gt;pucRotateData,内含旋转后的rgb数据 
39.	 * 返 回 值： 0 - 成功, 其他值 - 失败 
40.	 ***********************************************************************/</span>  
<span class="token number">41.</span>	<span class="token keyword">int</span> <span class="token function">PicRotate</span><span class="token punctuation">(</span>PT_PictureData ptPicData<span class="token punctuation">,</span><span class="token keyword">float</span> fAngle<span class="token punctuation">)</span>  
<span class="token number">42.</span>	<span class="token punctuation">{</span>  
<span class="token number">43.</span>	    <span class="token keyword">int</span> i <span class="token punctuation">,</span>j<span class="token punctuation">;</span>  
<span class="token number">44.</span>	    T_ConcernCoor tConCor<span class="token punctuation">,</span>tRonCor<span class="token punctuation">;</span>  
<span class="token number">45.</span>	    <span class="token comment">//原图像每一行去除偏移量的字节数  </span>
<span class="token number">46.</span>	    <span class="token comment">//int iSrcLineSize = bitCount * srcW / 8;  </span>
<span class="token number">47.</span>	    <span class="token keyword">int</span> iSrcLineSize <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iBpp<span class="token operator">*</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>  
<span class="token number">48.</span>	    <span class="token keyword">int</span> iDesLineSize<span class="token punctuation">;</span>  
<span class="token number">49.</span>	    <span class="token keyword">int</span> iX<span class="token punctuation">;</span><span class="token comment">//旋转后的x坐标  </span>
<span class="token number">50.</span>	    <span class="token keyword">int</span> iY<span class="token punctuation">;</span> <span class="token comment">//旋转后的y坐标  </span>
<span class="token number">51.</span>	  
<span class="token number">52.</span>	       <span class="token comment">/* 将坐标系A下的坐标转换为坐标系B下的坐标, 
53.	        * 用于计算旋转后的图像的宽和高  
54.	        * tConCor用于存放坐标系B下旋转前的坐标 
55.	        * tRonCor用于存放坐标系B下旋转后的坐标*/</span>  
<span class="token number">56.</span>	       tConCor<span class="token punctuation">.</span>iLTx <span class="token operator">=</span> <span class="token operator">-</span>ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> tConCor<span class="token punctuation">.</span>iLTy <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>  
<span class="token number">57.</span>	    tConCor<span class="token punctuation">.</span>iRTx <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> tConCor<span class="token punctuation">.</span>iRTy <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>  
<span class="token number">58.</span>	    tConCor<span class="token punctuation">.</span>iLBx <span class="token operator">=</span> <span class="token operator">-</span>ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>tConCor<span class="token punctuation">.</span>iLBy <span class="token operator">=</span> <span class="token operator">-</span>ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>  
<span class="token number">59.</span>	    tConCor<span class="token punctuation">.</span>iRBx <span class="token operator">=</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>tConCor<span class="token punctuation">.</span>iRBy <span class="token operator">=</span> <span class="token operator">-</span>ptPicData<span class="token operator">-&gt;</span>iZoomHeight<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>  
<span class="token number">60.</span>	  
<span class="token number">61.</span>	  
<span class="token number">62.</span>	    <span class="token comment">/* 计算坐标系B下旋转后的坐标 */</span>  
<span class="token number">63.</span>	    <span class="token keyword">double</span> sina <span class="token operator">=</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token function">RADIAN</span><span class="token punctuation">(</span>fAngle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">64.</span>	    <span class="token keyword">double</span> cosa <span class="token operator">=</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token function">RADIAN</span><span class="token punctuation">(</span>fAngle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">65.</span>	    tRonCor<span class="token punctuation">.</span>iLTx <span class="token operator">=</span>tConCor<span class="token punctuation">.</span>iLTx <span class="token operator">*</span> cosa <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iLTy <span class="token operator">*</span> sina<span class="token punctuation">;</span>  
<span class="token number">66.</span>	    tRonCor<span class="token punctuation">.</span>iLTy <span class="token operator">=</span> <span class="token operator">-</span>tConCor<span class="token punctuation">.</span>iLTx <span class="token operator">*</span> sina <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iLTy <span class="token operator">*</span> cosa<span class="token punctuation">;</span>  
<span class="token number">67.</span>	    tRonCor<span class="token punctuation">.</span>iRTx <span class="token operator">=</span>tConCor<span class="token punctuation">.</span>iRTx <span class="token operator">*</span> cosa <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iRTy <span class="token operator">*</span> sina<span class="token punctuation">;</span>  
<span class="token number">68.</span>	    tRonCor<span class="token punctuation">.</span>iRTy <span class="token operator">=</span> <span class="token operator">-</span>tConCor<span class="token punctuation">.</span>iRTx <span class="token operator">*</span> sina <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iRTy <span class="token operator">*</span> cosa<span class="token punctuation">;</span>  
<span class="token number">69.</span>	    tRonCor<span class="token punctuation">.</span>iLBx <span class="token operator">=</span> tConCor<span class="token punctuation">.</span>iLBx <span class="token operator">*</span> cosa <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iLBy <span class="token operator">*</span> sina<span class="token punctuation">;</span>  
<span class="token number">70.</span>	    tRonCor<span class="token punctuation">.</span>iLBy <span class="token operator">=</span> <span class="token operator">-</span>tConCor<span class="token punctuation">.</span>iLBx <span class="token operator">*</span> sina <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iLBy <span class="token operator">*</span> cosa<span class="token punctuation">;</span>  
<span class="token number">71.</span>	    tRonCor<span class="token punctuation">.</span>iRBx <span class="token operator">=</span> tConCor<span class="token punctuation">.</span>iRBx <span class="token operator">*</span> cosa <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iRBy <span class="token operator">*</span> sina<span class="token punctuation">;</span>  
<span class="token number">72.</span>	    tRonCor<span class="token punctuation">.</span>iRBy <span class="token operator">=</span> <span class="token operator">-</span>tConCor<span class="token punctuation">.</span>iRBx <span class="token operator">*</span> sina <span class="token operator">+</span> tConCor<span class="token punctuation">.</span>iRBy <span class="token operator">*</span> cosa<span class="token punctuation">;</span>  
<span class="token number">73.</span>	  
<span class="token number">74.</span>	      
<span class="token number">75.</span>	    <span class="token comment">/* 计算旋转后图像宽和高 */</span>  
<span class="token number">76.</span>	    ptPicData<span class="token operator">-&gt;</span>iRotateWidth <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>tRonCor<span class="token punctuation">.</span>iRBx <span class="token operator">-</span> tRonCor<span class="token punctuation">.</span>iLTx<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">abs</span><span class="token punctuation">(</span>tRonCor<span class="token punctuation">.</span>iRTx <span class="token operator">-</span> tRonCor<span class="token punctuation">.</span>iLBx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">77.</span>	    ptPicData<span class="token operator">-&gt;</span>iRotateHeight <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>tRonCor<span class="token punctuation">.</span>iRBy <span class="token operator">-</span> tRonCor<span class="token punctuation">.</span>iLTy<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">abs</span><span class="token punctuation">(</span>tRonCor<span class="token punctuation">.</span>iRTy <span class="token operator">-</span> tRonCor<span class="token punctuation">.</span>iLBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">78.</span>	  
<span class="token number">79.</span>	    <span class="token comment">/* 像素信息要保证3字节对齐，否则数据有可能出错*/</span>  
<span class="token number">80.</span>	    iDesLineSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ptPicData<span class="token operator">-&gt;</span>iRotateWidth<span class="token operator">*</span> ptPicData<span class="token operator">-&gt;</span>iBpp<span class="token operator">+</span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token punctuation">;</span>  
<span class="token number">81.</span>	    <span class="token comment">/* 分配旋转后的空间，注意这里要用旋转后的宽和高 */</span>  
<span class="token number">82.</span>	    ptPicData<span class="token operator">-&gt;</span>pucRotateData <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>iDesLineSize <span class="token operator">*</span> ptPicData<span class="token operator">-&gt;</span>iRotateHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">83.</span>	    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> ptPicData<span class="token operator">-&gt;</span>pucRotateData<span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">84.</span>	        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;malloc error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">85.</span>	        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token number">86.</span>	    <span class="token punctuation">}</span>  
<span class="token number">87.</span>	  
<span class="token number">88.</span>	    <span class="token comment">/* 通过新图像的坐标，计算对应的原图像的坐标* 
89.	      * i,j坐标就是对应的坐标系B下的x1,y1*/</span>  
<span class="token number">90.</span>	    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ptPicData<span class="token operator">-&gt;</span>iRotateHeight<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          
<span class="token number">91.</span>	        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> ptPicData<span class="token operator">-&gt;</span>iRotateWidth<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">92.</span>	            <span class="token comment">/* 坐标系B下的x,y1坐标，经过逆运算转换得到iX,iY,这两个值对应x0,y0 */</span>  
<span class="token number">93.</span>	            iX <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> ptPicData<span class="token operator">-&gt;</span>iRotateWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token function">RADIAN</span><span class="token punctuation">(</span><span class="token number">360</span> <span class="token operator">-</span> fAngle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span>i <span class="token operator">+</span> ptPicData<span class="token operator">-&gt;</span>iRotateHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token function">RADIAN</span><span class="token punctuation">(</span><span class="token number">360</span> <span class="token operator">-</span> fAngle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">94.</span>	            iY <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>j <span class="token operator">-</span> ptPicData<span class="token operator">-&gt;</span>iRotateWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token function">RADIAN</span><span class="token punctuation">(</span><span class="token number">360</span> <span class="token operator">-</span> fAngle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span>i <span class="token operator">+</span> ptPicData<span class="token operator">-&gt;</span>iRotateHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token function">RADIAN</span><span class="token punctuation">(</span><span class="token number">360</span> <span class="token operator">-</span> fAngle<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">95.</span>	            <span class="token comment">/*如果这个坐标不在原图像内，则不赋值*/</span>  
<span class="token number">96.</span>	            <span class="token keyword">if</span> <span class="token punctuation">(</span>iX <span class="token operator">&gt;</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">||</span> iX <span class="token operator">&lt;</span> <span class="token operator">-</span>ptPicData<span class="token operator">-&gt;</span>iZoomWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">||</span> iY <span class="token operator">&gt;</span> ptPicData<span class="token operator">-&gt;</span>iZoomHeight <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">||</span> iY <span class="token operator">&lt;</span> <span class="token operator">-</span>ptPicData<span class="token operator">-&gt;</span>iZoomHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
<span class="token number">97.</span>	                <span class="token keyword">continue</span><span class="token punctuation">;</span>  
<span class="token number">98.</span>	            <span class="token punctuation">}</span>  
<span class="token number">99.</span>	            <span class="token comment">/* 再将坐标系B下的x0,y0坐标，转换为坐标系A下的坐标 */</span>  
<span class="token number">100.</span>	            <span class="token keyword">int</span> iXN <span class="token operator">=</span> iX <span class="token operator">+</span> ptPicData<span class="token operator">-&gt;</span>iZoomWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>   
<span class="token number">101.</span>	         <span class="token keyword">int</span> iYN <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span>iY <span class="token operator">-</span> ptPicData<span class="token operator">-&gt;</span>iZoomHeight  <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token number">102.</span>	            <span class="token comment">/* 值拷贝*/</span>  
<span class="token number">103.</span>	            <span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ptPicData<span class="token operator">-&gt;</span>pucRotateData<span class="token punctuation">[</span>i <span class="token operator">*</span> iDesLineSize <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>ptPicData<span class="token operator">-&gt;</span>pucZoomData<span class="token punctuation">[</span>iYN <span class="token operator">*</span> iSrcLineSize <span class="token operator">+</span> iXN <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
<span class="token number">104.</span>	        <span class="token punctuation">}</span>  
<span class="token number">105.</span>	    <span class="token punctuation">}</span>  
<span class="token number">106.</span>	  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token number">107.</span>	<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,143),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","02_ImageProcess.html.vue"]]);export{u as default};
