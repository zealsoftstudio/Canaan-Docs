import{_ as n,o as s,c as a,e as p}from"./app-21fd3c9b.js";const t={},e=p(`<h1 id="_11-pwm编程" tabindex="-1"><a class="header-anchor" href="#_11-pwm编程" aria-hidden="true">#</a> 11 PWM编程</h1><h2 id="_11-1-pwm概述" tabindex="-1"><a class="header-anchor" href="#_11-1-pwm概述" aria-hidden="true">#</a> 11.1 PWM概述</h2><p>​ PWM，英文名Pulse Width Modulation，是脉冲宽度调制缩写，它是通过对一系列脉冲的宽度进行调制，等效出所需要的波形（包含形状以及幅值），对模拟信号电平进行数字编码，也就是说通过调节占空比的变化来调节信号、能量等的变化，占空比就是指在一个周期内，信号处于高电平的时间占据整个信号周期的百分比，例如方波的占空比就是50%。是利用微处理器的数字输出来对模拟电路进行控制的一种非常有效的技术。</p><p><img src="http://photos.100ask.net/NewHomeSite/PWM_image1.jpg" alt=""></p><p>​ PWM信号把模拟信号转化为数字电路所需要的编码，现在基本是采用数字电路，因此在很多场合都采用PWM信号，我们经常见到的就是交流调光电路，也可以说是无级调速，高电平占多一点，也就是占空比大一点亮度就亮一点，占空比小一点亮度就没有那么亮，前提是PWM的频率要大于我们人眼识别频率，要不然会出现闪烁现象。除了在调光电路应用，还有在直流斩波电路、蜂鸣器驱动、电机驱动、逆变电路、加湿机雾化量等都会有应用。</p><p><img src="http://photos.100ask.net/NewHomeSite/PWM_image2.jpg" alt=""></p><h3 id="_11-1-1-pwm的参数说明" tabindex="-1"><a class="header-anchor" href="#_11-1-1-pwm的参数说明" aria-hidden="true">#</a> 11.1.1 PWM的参数说明</h3><p>https://www.kernel.org/doc/Documentation/pwm.txt <strong>period</strong> PWM信号的总周期（读/写）。 值以纳秒为单位，是活动和非活动的总和 PWM的时间。</p><p><strong>duty_cycle（占空比）</strong> PWM信号的有效时间（读/写）。 值以纳秒为单位，且必须小于周期。 在NORMAL模式下，表示一个周期内高电平持续的时间 在INVERTED模式下，表示一个周期中低电平持续的时间</p><p><strong>polarity</strong> 改变PWM信号的极性（读/写）。 写入此属性仅在PWM芯片支持更改时才有效 极性。只有PWM不能改变极性 启用。值是字符串“normal”或“inversed”。</p><p><strong>enable</strong> 启用/禁用PWM信号（读/写）。</p><ul><li>0 - 禁用</li><li>1 - 启用</li></ul><h2 id="_11-2-用户层查看pwm" tabindex="-1"><a class="header-anchor" href="#_11-2-用户层查看pwm" aria-hidden="true">#</a> 11.2 用户层查看PWM</h2><p>​ 如果在内核配置中启用了CONFIG_SYSFS，则会提供一个简单的sysfs接口来使用用户空间的PWM。它在/ sys / class / pwm /中公开。每个被探测的PWM控制器/芯片将被输出为pwmchipN，其中N是PWM芯片的基础。你在目录里面会发现：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code> <span class="token number">1</span> echo <span class="token number">0</span> <span class="token operator">&gt;</span> <span class="token operator">/</span>sys<span class="token operator">/</span>class<span class="token operator">/</span>pwm<span class="token operator">/</span>pwmchip0<span class="token operator">/</span>export <span class="token comment">/*设置PWM4输出，调出pwm0目录下设备节点，用于以下配置 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code> <span class="token number">2</span> echo <span class="token number">1000000</span> <span class="token operator">&gt;</span><span class="token operator">/</span>sys<span class="token operator">/</span>class<span class="token operator">/</span>pwm<span class="token operator">/</span>pwmchip0<span class="token operator">/</span>pwm0<span class="token operator">/</span>period <span class="token comment">/*设置PWM4一个周期的持续时间，单位为ns，即1K Hz */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code> <span class="token number">3</span> echo <span class="token number">500000</span> <span class="token operator">&gt;</span><span class="token operator">/</span>sys<span class="token operator">/</span>class<span class="token operator">/</span>pwm<span class="token operator">/</span>pwmchip0<span class="token operator">/</span>pwm0<span class="token operator">/</span>duty_cycle <span class="token comment">/*设置一个周期中的”ON”时间，单位为ns，即占空比=duty_cycle/period=50% */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code> <span class="token number">4</span> echo <span class="token number">1</span> <span class="token operator">&gt;</span><span class="token operator">/</span>sys<span class="token operator">/</span>class<span class="token operator">/</span>pwm<span class="token operator">/</span>pwmchip0<span class="token operator">/</span>pwm0<span class="token operator">/</span>enable <span class="token comment">/*设置PWM4使能 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_11-3-pwm的sysfs使用" tabindex="-1"><a class="header-anchor" href="#_11-3-pwm的sysfs使用" aria-hidden="true">#</a> 11.3 PWM的SYSFS使用</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/time.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/ioctl.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/ioctl.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">dbmsg</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> args <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span></span><span class="token string">&quot;%s[%d]: &quot;</span><span class="token expression">fmt</span><span class="token string">&quot;\\n&quot;</span><span class="token expression"><span class="token punctuation">,</span> __FUNCTION__<span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span></span><span class="token punctuation">##</span><span class="token expression">args<span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DUTY</span>              <span class="token string">&quot;duty&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PERIOD</span>            <span class="token string">&quot;1000000&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DUTYCYCLE</span>         <span class="token string">&quot;500000&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LENGTH</span>            <span class="token expression"><span class="token number">100</span></span></span>

<span class="token keyword">int</span> fd_period <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>fd_duty <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>fd_enable <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>duty_m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;usage:\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;./pwm-sysfs-test duty &lt;0/1&gt; : 0--&gt;static; 1--&gt;dynamic \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">pwm_setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">int</span> fd<span class="token punctuation">,</span>ret<span class="token punctuation">;</span>

  fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/sys/class/pwm/pwmchip0/export&quot;</span><span class="token punctuation">,</span> O_WRONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>fd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;open export error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  ret <span class="token operator">=</span> <span class="token function">write</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;creat pwm0 error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span>
  <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;export pwm0 ok\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  fd_period <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/sys/class/pwm/pwmchip0/pwm0/period&quot;</span><span class="token punctuation">,</span> O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fd_duty <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/sys/class/pwm/pwmchip0/pwm0/duty_cycle&quot;</span><span class="token punctuation">,</span> O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fd_enable <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/sys/class/pwm/pwmchip0/pwm0/enable&quot;</span><span class="token punctuation">,</span> O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fd_period <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>fd_duty <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>fd_enable <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;open error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  ret <span class="token operator">=</span> <span class="token function">write</span><span class="token punctuation">(</span>fd_period<span class="token punctuation">,</span> PERIOD<span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>PERIOD<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;change period error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span>
    <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;change period ok\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  ret <span class="token operator">=</span> <span class="token function">write</span><span class="token punctuation">(</span>fd_duty<span class="token punctuation">,</span> DUTYCYCLE<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>DUTYCYCLE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;change duty_cycle error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span>
    <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;change duty_cycle ok\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  ret <span class="token operator">=</span> <span class="token function">write</span><span class="token punctuation">(</span>fd_enable<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;enable pwm0 error\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span>
  <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;enable pwm0 ok\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  duty_m <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>DUTYCYCLE<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;duty_m: %d \\n&quot;</span><span class="token punctuation">,</span>duty_m<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span> <span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
  <span class="token keyword">int</span> num<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>argc <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strncmp</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>DUTY<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>DUTY<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">dbmsg</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> DUTY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">pwm_setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-4-pwm应用编程" tabindex="-1"><a class="header-anchor" href="#_11-4-pwm应用编程" aria-hidden="true">#</a> 11.4 PWM应用编程</h2><p>The main useful user API are the following: devm_pwm_get() or pwm_get() / pwm_put(): this API is used to look up, request, then free a PWM device. pwm_init_state(),pwm_get_state(), pwm_apply_state(): this API is used to initialize, retrieve and apply the current PWM device state. pwm_config(): this API updates the PWM device configuration (period and duty cycle).</p><h3 id="_11-4-1-修改设备树" tabindex="-1"><a class="header-anchor" href="#_11-4-1-修改设备树" aria-hidden="true">#</a> 11.4.1 修改设备树</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>beeper <span class="token punctuation">{</span>
compatible <span class="token operator">=</span> <span class="token string">&quot;pwm-beeper&quot;</span><span class="token punctuation">;</span>
pwms <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">&amp;</span>pwm <span class="token number">0</span> <span class="token number">1000000</span> <span class="token number">0</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
pinctrl<span class="token operator">-</span>names <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>
pinctrl<span class="token operator">-</span><span class="token number">0</span> <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">&amp;</span>pwm0_pin<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-4-2-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_11-4-2-修改配置文件" aria-hidden="true">#</a> 11.4.2 修改配置文件</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>Activate PWM framework in the kernel configuration through the Linux menuconfig tool<span class="token punctuation">,</span> Menuconfig or how to configure <span class="token function">kernel</span> <span class="token punctuation">(</span>CONFIG_PWM<span class="token operator">=</span>y<span class="token punctuation">)</span><span class="token operator">:</span>
Device Drivers  <span class="token operator">--</span><span class="token operator">-&gt;</span>
   <span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Pulse<span class="token operator">-</span>Width <span class="token function">Modulation</span> <span class="token punctuation">(</span>PWM<span class="token punctuation">)</span> Support  <span class="token operator">--</span><span class="token operator">-&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-4-3-添加驱动" tabindex="-1"><a class="header-anchor" href="#_11-4-3-添加驱动" aria-hidden="true">#</a> 11.4.3 添加驱动</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/init.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/module.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/miscdevice.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/fs.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;asm/gpio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/pwm.h&gt;</span></span>

<span class="token comment">//#include &lt;plat/gpio-cfg.h&gt;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PWM_ON</span>  <span class="token expression"><span class="token number">0x100001</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PWM_OFF</span> <span class="token expression"><span class="token number">0x100002</span></span></span>

<span class="token keyword">struct</span> <span class="token class-name">pwm_device</span> <span class="token operator">*</span>pwm_dev_2<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">pwm_device</span> <span class="token operator">*</span>pwm_dev_3<span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">pwm_ioctl</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">file</span> <span class="token operator">*</span>file<span class="token punctuation">,</span>
                        <span class="token keyword">unsigned</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span>
                        <span class="token keyword">unsigned</span> <span class="token keyword">long</span> arg<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> PWM_ON<span class="token operator">:</span>
                ret <span class="token operator">=</span> <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">,</span><span class="token number">200000</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_dev_2 ioctl fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                ret <span class="token operator">=</span> <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">,</span><span class="token number">300000</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_dev_3 ioctl fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">pwm_enable</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">pwm_enable</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> PWM_OFF<span class="token operator">:</span>
                ret <span class="token operator">=</span> <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_dev_2 ioctl fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                ret <span class="token operator">=</span> <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_dev_3 ioctl fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">pwm_disable</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">pwm_disable</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//定义初始化硬件操作方法</span>
<span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">file_operations</span> pwm_fops <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span>owner <span class="token operator">=</span> THIS_MODULE<span class="token punctuation">,</span>
    <span class="token punctuation">.</span>unlocked_ioctl <span class="token operator">=</span> pwm_ioctl
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//定义初始化混杂设备对象</span>
<span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">miscdevice</span> pwm_misc <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span>minor <span class="token operator">=</span> MISC_DYNAMIC_MINOR<span class="token punctuation">,</span> <span class="token comment">//动态分配次设备号</span>
    <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;mypwm&quot;</span><span class="token punctuation">,</span>             <span class="token comment">//dev/mypwm</span>
    <span class="token punctuation">.</span>fops <span class="token operator">=</span> <span class="token operator">&amp;</span>pwm_fops 
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">pwm_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;regisger pwm_misc device\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//1.申请pwm资源，设置输出为0</span>
    pwm_dev_2 <span class="token operator">=</span> <span class="token function">pwm_request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;pwm_2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pwm_dev_2 <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_dev_2 register fail\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    pwm_dev_3 <span class="token operator">=</span> <span class="token function">pwm_request</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;pwm_3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>pwm_dev_3 <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwn_dev_3 register fail\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ret <span class="token operator">=</span> <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_config_2 init fail\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ret <span class="token operator">=</span> <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_config_3 init fail\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ret <span class="token operator">=</span> <span class="token function">pwm_enable</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_enable_dev_2 init success\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_enable_dev_2 init fail\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ret <span class="token operator">=</span> <span class="token function">pwm_enable</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_enable_dev_3 init success\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;pwm_enable_dev_3 init fail\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//2.注册混杂设备</span>
    <span class="token function">misc_register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pwm_misc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">pwm_exit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;unregister pwm_misc device\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//1.卸载混杂设备</span>
    <span class="token function">misc_deregister</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pwm_misc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//2.释放pwm资源</span>
    <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">pwm_disable</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">pwm_free</span><span class="token punctuation">(</span>pwm_dev_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">pwm_config</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">pwm_disable</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">pwm_free</span><span class="token punctuation">(</span>pwm_dev_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">module_init</span><span class="token punctuation">(</span>pwm_init<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">module_exit</span><span class="token punctuation">(</span>pwm_exit<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">MODULE_LICENSE</span><span class="token punctuation">(</span><span class="token string">&quot;GPL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-4-4-运行测试" tabindex="-1"><a class="header-anchor" href="#_11-4-4-运行测试" aria-hidden="true">#</a> 11.4.4 运行测试</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span> </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span> </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span> </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span> </span>
 
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PWM_ON</span>  <span class="token expression"><span class="token number">0x100001</span> </span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PWM_OFF</span> <span class="token expression"><span class="token number">0x100002</span> </span></span>
 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> fd<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> a<span class="token punctuation">;</span> 
 
    fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;/dev/mypwm&quot;</span><span class="token punctuation">,</span> O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> 
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> 
 
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token function">ioctl</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> PWM_ON<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
    <span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","11_PWM.html.vue"]]);export{r as default};
