import{_ as i,r,o as d,c as o,a as e,b as a,d as s,e as t}from"./app-21fd3c9b.js";const c={},l=t(`<h1 id="drm开发指南" tabindex="-1"><a class="header-anchor" href="#drm开发指南" aria-hidden="true">#</a> Drm开发指南</h1><h2 id="_1简介" tabindex="-1"><a class="header-anchor" href="#_1简介" aria-hidden="true">#</a> 1简介</h2><p>目前sdk使用的linux版本是4.17.0。Linux，全称GNU/Linux，是一种免费使用和自由传播的类UNIX操作系统，其内核由林纳斯·本纳第克特·托瓦兹于1991年10月5日首次发布，它主要受到Minix和Unix思想的启发，是一个基于POSIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。Linux有上百种不同的发行版，如基于社区开发的debian、archlinux，和基于商业开发的Red Hat Enterprise Linux、SUSE、Oracle Linux等。</p><h2 id="_2硬件介绍" tabindex="-1"><a class="header-anchor" href="#_2硬件介绍" aria-hidden="true">#</a> 2硬件介绍</h2><h3 id="_2-1获取方式" tabindex="-1"><a class="header-anchor" href="#_2-1获取方式" aria-hidden="true">#</a> 2.1获取方式</h3><p>下载并编译sdk，sdk编译的时候会下载并编译linux代码。</p><p>sdk的下载编译方法请参考 系统开发指南。</p><h3 id="_2-2驱动文件及目录" tabindex="-1"><a class="header-anchor" href="#_2-2驱动文件及目录" aria-hidden="true">#</a> 2.2驱动文件及目录</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>drivers/gpu/drm/canaan/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-3开发环境需求" tabindex="-1"><a class="header-anchor" href="#_2-3开发环境需求" aria-hidden="true">#</a> 2.3开发环境需求</h3><p>无</p><h3 id="_2-4操作系统" tabindex="-1"><a class="header-anchor" href="#_2-4操作系统" aria-hidden="true">#</a> 2.4操作系统</h3><p>Linux系统及版本号支持如下图所示：</p><table><thead><tr><th>编号</th><th>软件资源</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>Ubuntu</td><td>18.04/20.04</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h3 id="_2-5软件环境" tabindex="-1"><a class="header-anchor" href="#_2-5软件环境" aria-hidden="true">#</a> 2.5软件环境</h3><p>软件环境要求如下表所示：</p><table><thead><tr><th style="text-align:left;">编号</th><th>软件资源</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td>K510 SDK</td><td>v1.1</td></tr><tr><td style="text-align:left;"></td><td></td><td></td></tr><tr><td style="text-align:left;"></td><td></td><td></td></tr><tr><td style="text-align:left;"></td><td></td><td></td></tr></tbody></table><h2 id="_3direct-rendering-manager" tabindex="-1"><a class="header-anchor" href="#_3direct-rendering-manager" aria-hidden="true">#</a> 3Direct Rendering Manager</h2><h3 id="_3-1-参考连接" tabindex="-1"><a class="header-anchor" href="#_3-1-参考连接" aria-hidden="true">#</a> 3.1 参考连接</h3>`,19),p={href:"https://docs.nvidia.com/jetson/l4t-multimedia/group__direct__rendering__manager.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://cgit.freedesktop.org/mesa/drm",target:"_blank",rel:"noopener noreferrer"},h={href:"https://gitlab.freedesktop.org/mesa/drm",target:"_blank",rel:"noopener noreferrer"},m=t(`<h3 id="_3-2-drm-官方常用api" tabindex="-1"><a class="header-anchor" href="#_3-2-drm-官方常用api" aria-hidden="true">#</a> 3.2 drm 官方常用api</h3><h4 id="◆-drmmodeaddfb" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeaddfb" aria-hidden="true">#</a> ◆ drmModeAddFB()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeAddFB</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> width<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> height<span class="token punctuation">,</span>
    <span class="token class-name">uint8_t</span> depth<span class="token punctuation">,</span>
    <span class="token class-name">uint8_t</span> bpp<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> pitch<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> bo_handle<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> <span class="token operator">*</span>buf_id 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Creates a framebuffer.</p><p>The function creates a framebuffer with a specified size and format, using the specified buffer object as the memory backing store. The buffer object can be a &quot;dumb buffer&quot; created by a call to drmIoctl with the request parameter set to DRM_IOCTL_MODE_CREATE_DUMB, or it can be a dma-buf imported by a call to the drmPrimeFDToHandle function.</p><h5 id="postcondition" tabindex="-1"><a class="header-anchor" href="#postcondition" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must remove (free) the framebuffer by calling drmModeRmFB.</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Parameters
[in]	fd	The file descriptor of an open DRM device.
[in]	width	Framebuffer width in pixels.
[in]	height	Framebuffer height in pixels.
[in]	depth	Framebuffer depth in bits.
[in]	bpp	Framebuffer bits per pixel.
[in]	pitch	Framebuffer pitch in bytes.
[in]	bo_handle	A handle for a buffer object to provide memory backing.
[out]	buf_id	Receives the framebuffer ID of the created framebuffer if framebuffer creation is successful.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 if framebuffer creation is successful, or -1 otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodeaddfb2" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeaddfb2" aria-hidden="true">#</a> ◆ drmModeAddFB2()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeAddFB2</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> width<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> height<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> pixel_format<span class="token punctuation">,</span>
    <span class="token keyword">const</span> <span class="token class-name">uint32_t</span> bo_handles<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">const</span> <span class="token class-name">uint32_t</span> pitches<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">const</span> <span class="token class-name">uint32_t</span> offsets<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> <span class="token operator">*</span>buf_id<span class="token punctuation">,</span>
    <span class="token class-name">uint32_t</span> flags 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Creates a framebuffer, specifying format and planes.</p><p>This function is similar to :drmModeAddFB, but offers more options. The buffer objects&#39; pixel format is specified explicitly, instead of being depth+bpp as in drmModeAddFB. Also, multiplanar YUV formats are supported. As for drmModeAddFB, the buffer object handle(s) can be a dumb buffers or imported dma-bufs.</p><h5 id="postcondition-1" tabindex="-1"><a class="header-anchor" href="#postcondition-1" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must remove (free) the framebuffer by calling drmModeRmFB.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note" aria-hidden="true">#</a> Note</h5><p>The flags parameter is not currently supported.</p><h5 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[in]	fd	The file descriptor of an open DRM device.
[in]	width	Framebuffer width in pixels.
[in]	height	Framebuffer height in pixels.
[in]	pixel_format	Pixel format of the bo_handle(s).
[in]	bo_handles	An array of four handles for buffer objects to provide memory backing. Unused array elements must be NULL.
[in]	pitches	An array containing the pitches of the buffer objects in bytes.
[in]	offsets	An array containing the offsets of the buffer objects in bytes.
[out]	buf_id	Receives the framebuffer ID of the created framebuffer if framebuffer creation is successful.
[in]	flags	Creation flags.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 if successful, or -1 otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodeaddfb2withmodifiers" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeaddfb2withmodifiers" aria-hidden="true">#</a> ◆ drmModeAddFB2WithModifiers()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeAddFB2WithModifiers</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	width<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	height<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	pixel_format<span class="token punctuation">,</span>
<span class="token keyword">const</span> <span class="token class-name">uint32_t</span> 	bo_handles<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token keyword">const</span> <span class="token class-name">uint32_t</span> 	pitches<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token keyword">const</span> <span class="token class-name">uint32_t</span> 	offsets<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token keyword">const</span> <span class="token class-name">uint64_t</span> 	modifier<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> <span class="token operator">*</span> 	buf_id<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	flags 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Creates a framebuffer, specifying format and planes. This function is similar to :drmModeAddFB2, but accepts modifiers.</p><h5 id="postcondition-2" tabindex="-1"><a class="header-anchor" href="#postcondition-2" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must remove (free) the framebuffer by calling drmModeRmFB.</p><h5 id="note-1" tabindex="-1"><a class="header-anchor" href="#note-1" aria-hidden="true">#</a> Note</h5><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[in]	fd	The file descriptor of an open DRM device.
[in]	width	Framebuffer width in pixels.
[in]	height	Framebuffer height in pixels.
[in]	pixel_format	Pixel format of the bo_handle(s).
[in]	bo_handles	An array of four handles for buffer objects to provide memory backing. Unused array elements must be NULL.
[in]	pitches	An array containing the pitches of the buffer objects in bytes.
[in]	offsets	An array containing the offsets of the buffer objects in bytes.
[in]	modifier	An array containing the format modifiers. For multi-planar formats, each plane should have same modifier value. Supported modifiers can be obtained using IN_FORMATS plane property.
[out]	buf_id	Receives the framebuffer ID of the created framebuffer if framebuffer creation is successful.
[in]	flags	flags should be DRM_MODE_FB_MODIFIERS when modifiers are specified, otherwise 0.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 if successful, or -1 otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodeatomicaddproperty" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeatomicaddproperty" aria-hidden="true">#</a> ◆ drmModeAtomicAddProperty()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeAtomicAddProperty</span>	<span class="token punctuation">(</span>	drmModeAtomicReqPtr 	req<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	object_id<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	property_id<span class="token punctuation">,</span>
<span class="token class-name">uint64_t</span> 	value 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Adds a property to an atomic request. Adds a property and value to an atomic request.</p><h5 id="postcondition-3" tabindex="-1"><a class="header-anchor" href="#postcondition-3" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-2" tabindex="-1"><a class="header-anchor" href="#note-2" aria-hidden="true">#</a> Note</h5><h5 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>req:	     An atomic request.
object_id:	 Object ID of a CRTC, plane, or connector to be modified.
property_id: Property ID of the property to be modified.
value:	     The new value for the property.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-1 :if req is NULL or the API is out of memory, otherwise it returns the number of properties in the atomic request

-EINVAL: if DRM_CLIENT_CAP_ATOMIC is not enabled.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="◆-drmmodeatomiccommit" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeatomiccommit" aria-hidden="true">#</a> ◆ drmModeAtomicCommit()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeAtomicCommit</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                            drmModeAtomicReqPtr 	req<span class="token punctuation">,</span>
                            <span class="token class-name">uint32_t</span> 	flags<span class="token punctuation">,</span>
                            <span class="token keyword">void</span> <span class="token operator">*</span> 	user_data 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Commits an atomic property change request to hardware.</p><p>Sends all of the property changes in a drmModeAtomicReqPtr structure to hardware.</p><h5 id="postcondition-4" tabindex="-1"><a class="header-anchor" href="#postcondition-4" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-3" tabindex="-1"><a class="header-anchor" href="#note-3" aria-hidden="true">#</a> Note</h5><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd:	The file descriptor of an open DRM device.
req:	The request object describing properties to commit.
flags:	Flags which influence the operation. The supported flags are:
        DRM_MODE_PAGE_FLIP_ASYNC: Commits values immediately when possible; does not latch new properties at the next vblank.
        DRM_MODE_ATOMIC_NONBLOCK: Commits values to hardware but does not wait for hardware to accept the new values.
        DRM_MODE_ATOMIC_TEST_ONLY: Validates input, but does not commit the values to hardware.
user_data :	Unused.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0	if successful.
-1	if req is NULL.
-EINVAL	if DRM_CLIENT_CAP_ATOMIC is not enabled, the value of flags is illegal, or atomic property IDs in the request are not recognized.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="◆-drmmodeatomicfree" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeatomicfree" aria-hidden="true">#</a> ◆ drmModeAtomicFree()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">drmModeAtomicFree</span>	<span class="token punctuation">(</span>	drmModeAtomicReqPtr 	req	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Frees an atomic request.</p><p>Frees a drmModeAtomicReqPtr object allocated by drmModeAtomicAlloc, and all of the associated drmModeAtomicReqItemPtr objects.</p><h5 id="postcondition-5" tabindex="-1"><a class="header-anchor" href="#postcondition-5" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-4" tabindex="-1"><a class="header-anchor" href="#note-4" aria-hidden="true">#</a> Note</h5><h5 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>req	:The atomic request object to be freed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NULL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodefreeconnector" tabindex="-1"><a class="header-anchor" href="#◆-drmmodefreeconnector" aria-hidden="true">#</a> ◆ drmModeFreeConnector()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">drmModeFreeConnector</span>	<span class="token punctuation">(</span>	drmModeConnectorPtr 	ptr	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Frees a connector.</p><p>Frees a drmModeConnectorPtr structure allocated by drmModeGetConnector.</p><h5 id="postcondition-6" tabindex="-1"><a class="header-anchor" href="#postcondition-6" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-5" tabindex="-1"><a class="header-anchor" href="#note-5" aria-hidden="true">#</a> Note</h5><h5 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ptr	A pointer to the connector to be freed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodefreeobjectproperties" tabindex="-1"><a class="header-anchor" href="#◆-drmmodefreeobjectproperties" aria-hidden="true">#</a> ◆ drmModeFreeObjectProperties()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">drmModeFreeObjectProperties</span>	<span class="token punctuation">(</span>	drmModeObjectPropertiesPtr 	ptr	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Frees an object properties structure.</p><p>Frees a drmModeObjectPropertiesPtr structure allocated by drmModeObjectGetProperties.</p><h5 id="postcondition-7" tabindex="-1"><a class="header-anchor" href="#postcondition-7" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-6" tabindex="-1"><a class="header-anchor" href="#note-6" aria-hidden="true">#</a> Note</h5><h5 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ptr	A pointer to the object properties structure to be freed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodefreeplaneresources" tabindex="-1"><a class="header-anchor" href="#◆-drmmodefreeplaneresources" aria-hidden="true">#</a> ◆ drmModeFreePlaneResources()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">drmModeFreePlane</span>	<span class="token punctuation">(</span>	drmModePlanePtr 	ptr	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Frees a plane.</p><p>Frees a drmModePlanePtr structure allocated by drmModeGetPlane.</p><h5 id="postcondition-8" tabindex="-1"><a class="header-anchor" href="#postcondition-8" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-7" tabindex="-1"><a class="header-anchor" href="#note-7" aria-hidden="true">#</a> Note</h5><h5 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ptr	A pointer to the plane to be freed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodefreeproperty" tabindex="-1"><a class="header-anchor" href="#◆-drmmodefreeproperty" aria-hidden="true">#</a> ◆ drmModeFreeProperty()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">drmModeFreeProperty</span>	<span class="token punctuation">(</span>	drmModePropertyPtr 	ptr	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Frees a property structure.</p><p>Frees a drmModePropertyPtr structure allocated by drmModeGetProperty.</p><h5 id="postcondition-9" tabindex="-1"><a class="header-anchor" href="#postcondition-9" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-8" tabindex="-1"><a class="header-anchor" href="#note-8" aria-hidden="true">#</a> Note</h5><h5 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ptr	A pointer to a property structure returned by drmModeGetProperty.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodefreeresources" tabindex="-1"><a class="header-anchor" href="#◆-drmmodefreeresources" aria-hidden="true">#</a> ◆ drmModeFreeResources()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">drmModeFreeResources</span>	<span class="token punctuation">(</span>	drmModeResPtr 	ptr	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Frees a resource information structure.</p><p>Frees a drmModeResPtr structure allocated by drmModeGetResources.</p><h5 id="postcondition-10" tabindex="-1"><a class="header-anchor" href="#postcondition-10" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-9" tabindex="-1"><a class="header-anchor" href="#note-9" aria-hidden="true">#</a> Note</h5><h5 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ptr	A pointer to the resource to be freed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodegetconnector" tabindex="-1"><a class="header-anchor" href="#◆-drmmodegetconnector" aria-hidden="true">#</a> ◆ drmModeGetConnector()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModeConnectorPtr <span class="token function">drmModeGetConnector</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                                           <span class="token class-name">uint32_t</span> 	connector_id 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Gets information for a connector.</p><p>If connector_id is valid, fetches a drmModeConnectorPtr structure which contains information about a connector, such as available modes, connection status, connector type, and which encoder (if any) is attached.</p><h5 id="postcondition-11" tabindex="-1"><a class="header-anchor" href="#postcondition-11" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must free the connector information structure by calling drmModeFreeConnector.</p><h5 id="note-10" tabindex="-1"><a class="header-anchor" href="#note-10" aria-hidden="true">#</a> Note</h5><p>connector-&gt;mmWidth and connector-&gt;mmHeight are currently set to placeholder values.</p><h5 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd :	        The file descriptor of an open DRM device.
connector_id:	The connector ID of the connector to be retrieved.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>A drmModeConnectorPtr structure if successful, or NULL if the connector is not found or the API is out of memory.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodegetplaneresources" tabindex="-1"><a class="header-anchor" href="#◆-drmmodegetplaneresources" aria-hidden="true">#</a> ◆ drmModeGetPlaneResources()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModePlaneResPtr <span class="token function">drmModeGetPlaneResources</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Gets information about planes.</p><p>Gets a list of plane resources for a DRM device. A DRM application typically calls this function early to identify the available display layers.</p><p>By default, the information returned includes only &quot;Overlay&quot; type (regular) planes – not &quot;Primary&quot; and &quot;Cursor&quot; planes. If DRM_CLIENT_CAP_UNIVERSAL_PLANES has been enabled with drmSetClientCap, the information returned includes &quot;Primary&quot; planes representing CTRCs, and &quot;Cursor&quot; planes representing Cursors. This allows CRTCs and Cursors to be manipulated with plane functions such as drmModeSetPlane.</p><h5 id="postcondition-12" tabindex="-1"><a class="header-anchor" href="#postcondition-12" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must free the plane information structure by calling drmModeFreePlaneResources.</p><h5 id="note-11" tabindex="-1"><a class="header-anchor" href="#note-11" aria-hidden="true">#</a> Note</h5><p>DRM currently does not implement &quot;Cursor&quot; type planes.</p><h5 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd	The file descriptor of an open DRM device.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>A drmModeResPtr structure if successful, or NULL otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodegetproperty" tabindex="-1"><a class="header-anchor" href="#◆-drmmodegetproperty" aria-hidden="true">#</a> ◆ drmModeGetProperty()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModePropertyPtr <span class="token function">drmModeGetProperty</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                                            <span class="token class-name">uint32_t</span> 	propertyId 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Gets a property structure that describes a property of a DRM object.</p><p>The DRM object can be a plane, a CRTC, or a connector.</p><p>This function operates on a drmModeObjectPropertiesPtr structure returned by drmModeObjectGetProperties().</p><p>The modifiable properties depend on the DRM object type:</p><ol><li><p>For a plane (object type DRM_MODE_OBJECT_PLANE):</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;SRC_X&quot;, &quot;SRC_Y&quot;, &quot;SRC_W&quot;, &quot;SRC_H&quot;, &quot;zpos&quot;, &quot;alpha&quot; &quot;CRTC_X&quot;,
&quot;CRTC_Y&quot;, &quot;CRTC_W&quot;, &quot;CRTC_H&quot;, &quot;CRTC_ID&quot;, &quot;FB_ID&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>For a CRTC (object type DRM_MODE_OBJECT_CRTC), supported values are:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;MODE_ID&quot;, &quot;ACTIVE&quot;, &quot;HDR_SUPPORTED&quot;, &quot;HDR_METADATA_SMPTE_2086_ID&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>For a connector (object type DRM_MODE_OBJECT_CONNECTOR), the supported value is:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;CRTC_ID&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>For DRM planes, the enums field holds a list of key-word pairs (name : value) that defines the properties.</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModePropertyPtr<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">.</span>name
drmModePropertyPtr<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>Supported values for the name field are defined above (i.e., &quot;SRC_X&quot;, &quot;SRC_Y&quot;, or &quot;SRC_W&quot;). This field is modifiable.</li><li>Supported values for the value fields are:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;Primary&quot;, &quot;Overlay&quot;, &quot;Cursor&quot; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This field is read-only.</p><p>To identify the plane type, iterate through the following list to locate the enum whose value field matches the one you seek. Then, get the value from corresponding name field.</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModePropertyPtr<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span> <span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For example:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> props<span class="token operator">-&gt;</span>count_enums<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\t\\t%lld = %s\\n&quot;</span><span class="token punctuation">,</span> props<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span> props<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">==</span> value<span class="token punctuation">)</span>
        name <span class="token operator">=</span> props<span class="token operator">-&gt;</span>enums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token operator">-&gt;</span>count_enums <span class="token operator">&amp;&amp;</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* The specified plane property value appears in the DRM properties. */</span>
    <span class="token comment">/* Print the property name, which will be &quot;Primary&quot;, &quot;Overlay&quot;, or &quot;Cursor&quot;. */</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\tcon_value    : %s\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">/* The specified plane property value does not appear in the DRM properties. */</span>
    <span class="token comment">/* Print the property value for which we were looking. */</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\tcon_value    : %&quot;</span> PRIu64 <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="postcondition-13" tabindex="-1"><a class="header-anchor" href="#postcondition-13" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must free the property information structure by calling drmModeFreeProperty.</p><h5 id="note-12" tabindex="-1"><a class="header-anchor" href="#note-12" aria-hidden="true">#</a> Note</h5><p>The zpos value for a plane is initialized with an offset of 10 relative to the next plane. This is to allow for flexible configuration of heads. For example:</p><ol><li>&quot;Primary&quot; type Plane zpos = 10</li><li>First &quot;Overlay&quot; Plane zpos = 20</li><li>Next &quot;Overlay&quot; Plane zpos = 30</li><li>Etc.</li></ol><p>The allowed range for zpos is [0, 255]. Planes with numerically greater values for zpos occlude planes with numerically lesser values. The alpha value for a plane causes a plane-wide transparency to be applied as well as the per-pixel alpha contained in the buffer object. The allowed range for alpha is [0, 255], where 0 is fully transparent and 255 indicates that only per-pixel alpha has an effect. For non-alpha pixel formats, there is no per-pixel alpha, so 255 indicates fully opaque.</p><h5 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd:	The file descriptor of an open DRM device.
propertyId:	Property ID of the property object to be fetched.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>A drmModePropertyPtr if successful, or NULL otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodegetresources" tabindex="-1"><a class="header-anchor" href="#◆-drmmodegetresources" aria-hidden="true">#</a> ◆ drmModeGetResources()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModeResPtr <span class="token function">drmModeGetResources</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Gets information about a DRM device&#39;s CRTCs, encoders, and connectors.</p><p>Gets a list of a DRM device&#39;s major resources. A DRM application typically calls this function early to identify available displays and other resources. The function does not report plane resources, though. These can be queried with drmModeGetPlaneResources.</p><h5 id="postcondition-14" tabindex="-1"><a class="header-anchor" href="#postcondition-14" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must free the resource information structure by calling drmModeFreeResources.</p><h5 id="note-13" tabindex="-1"><a class="header-anchor" href="#note-13" aria-hidden="true">#</a> Note</h5><p>The drmModeResPtr structure&#39;s min_width, min_height, max_width, and max_height members are set to placeholder values.</p><h5 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd	The file descriptor of an open DRM device.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>A drmModeResPtr structure if successful, or NULL otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodeobjectgetproperties" tabindex="-1"><a class="header-anchor" href="#◆-drmmodeobjectgetproperties" aria-hidden="true">#</a> ◆ drmModeObjectGetProperties()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>drmModeObjectPropertiesPtr <span class="token function">drmModeObjectGetProperties</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                                                            <span class="token class-name">uint32_t</span> 	object_id<span class="token punctuation">,</span>
                                                            <span class="token class-name">uint32_t</span> 	object_type 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Gets all properties of a DRM object.</p><p>Gets an object properties structure that describes all of the atomically modifiable properties of a specified DRM object, as well as read-only properties not included in the corresponding drmModeCrtcPtr, drmModeConnectorPtr, and drmModePlanePtr structures. You can then retrieve individual properties with drmModeGetProperty and change their values with drmModeAtomicAddProperty.</p><p>The drmModeObjectPropertiesPtr structure contains an array of property IDs (props), an array of corresponding property values (prop_values), and the number of elements in each array (count_props). You can get the name of a property by calling drmModeGetProperty on the property ID and looking at the returned drmModePropertyPtr structure&#39;s name field.</p><p>To modify a property atomically, create a drmModeAtomicReqPtr request object by calling drmModeAtomicAlloc, then call drmModeAtomicAddProperty, specifying the drmModeAtomicReqPtr object, the object ID of the object to modify, the property ID of the property to modify, and the property&#39;s new value. Then commit the request with drmModeAtomicCommit. You can set several properties in an atomic request and commit them in a single operation.</p><h5 id="postcondition-15" tabindex="-1"><a class="header-anchor" href="#postcondition-15" aria-hidden="true">#</a> Postcondition</h5><p>If the call is successful, the application must free the drmModeObjectPropertiesPtr structure by calling drmModeFreeObjectProperties.</p><h5 id="note-14" tabindex="-1"><a class="header-anchor" href="#note-14" aria-hidden="true">#</a> Note</h5><p>Not all object types are supported.</p><h5 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd:	The file descriptor of an open DRM device.
object_id:	The object ID of the DRM object whose properties are to be retrieved.
object_type:	A symbol representing an object type. The following object types are supported:
    DRM_MODE_OBJECT_CRTC
    DRM_MODE_OBJECT_CONNECTOR
    DRM_MODE_OBJECT_PLANE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>A drmModeObjectPropertiesPtr object if successful, or NULL otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodermfb" tabindex="-1"><a class="header-anchor" href="#◆-drmmodermfb" aria-hidden="true">#</a> ◆ drmModeRmFB()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeRmFB</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                    <span class="token class-name">uint32_t</span> 	fb_id 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Destroys a framebuffer.</p><p>Destroys (frees) a framebuffer allocated by drmModeAddFB or drmModeAddFB2.</p><h5 id="postcondition-16" tabindex="-1"><a class="header-anchor" href="#postcondition-16" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-15" tabindex="-1"><a class="header-anchor" href="#note-15" aria-hidden="true">#</a> Note</h5><h5 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd	The file descriptor of an open DRM device.
fb_id	The ID of the framebuffer to destroy.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 if destruction is successful, or -ENOENT if the framebuffer is not found.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodesetcrtc" tabindex="-1"><a class="header-anchor" href="#◆-drmmodesetcrtc" aria-hidden="true">#</a> ◆ drmModeSetCrtc()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeSetCrtc</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	crtc_id<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	fb_id<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	x<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	y<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> <span class="token operator">*</span> 	connectors<span class="token punctuation">,</span>
                        <span class="token keyword">int</span> 	count<span class="token punctuation">,</span>
                        drmModeModeInfoPtr 	drm_mode 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sets a CRTC configuration.</p><p>If the DRM mode is specified (if drm_mode is not NULL), sets the display mode on the CRTC and specified connector(s). New fb_id, x, and y properties will set at vblank.</p><h5 id="postcondition-17" tabindex="-1"><a class="header-anchor" href="#postcondition-17" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-16" tabindex="-1"><a class="header-anchor" href="#note-16" aria-hidden="true">#</a> Note</h5><p>The fb_id, x, and y parameters accept the special input value -1, which indicates that the hardware window framebuffer or the corresponding offset is not to be changed. (Kernel based DRM drivers accept -1 only for fb_id. They return error code -ERANGE if given -1 for x or y.) It is permitted to specify a valid mode and fb_id==-1, even if no framebuffer is currently attached to the CRTC. The function will set the display mode but will leave the CRTC framebuffer undefined. Framebuffers set on a CRTC, whether by drmModeSetCrtc, drmModePageFlip, or any other means, are displayed behind planes. The CRTC display layer is the lowest in stacking order.</p><h5 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd:	The      file descriptor of an open DRM device.
crtc_id	:    The ID of the CRTC to be set.
fb_id:	     ID of the framebuffer to display with this CRTC, or -1 to use the same CRTC as the previous operation.
x:	         Offset from left of active display region to place the framebuffer. If x is -1, the X offset is not changed.
y:	         Offset from top of active display region to place the framebuffer. If y is -1, the Y offset is not changed.
connectors:	 A pointer to a list of connectors to bind to the CRTC.
count:	     Number of connectors in the connectors list.
drm_mode:	 Mode to set, or NULL to use the same mode as the previous operation.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0:	      if successful.
-EINVAL:  if crtc_id is invalid.
-1:	      if count is invalid, or the list specified by connectors is incompatible with the CRTC.
-errno:	  otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="◆-drmmodesetplane" tabindex="-1"><a class="header-anchor" href="#◆-drmmodesetplane" aria-hidden="true">#</a> ◆ drmModeSetPlane()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModeSetPlane</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	plane_id<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	crtc_id<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	fb_id<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	flags<span class="token punctuation">,</span>
                        <span class="token class-name">int32_t</span> 	crtc_x<span class="token punctuation">,</span>
                        <span class="token class-name">int32_t</span> 	crtc_y<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	crtc_w<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	crtc_h<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	src_x<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	src_y<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	src_w<span class="token punctuation">,</span>
                        <span class="token class-name">uint32_t</span> 	src_h 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Changes a plane&#39;s framebuffer and position.</p><h5 id="postcondition-18" tabindex="-1"><a class="header-anchor" href="#postcondition-18" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-17" tabindex="-1"><a class="header-anchor" href="#note-17" aria-hidden="true">#</a> Note</h5><p>The crtc_... and src_... parameters accept the special input value -1, which indicates that the hardware offset value is not to be changed. (Kernel based DRM drivers return the error code -ERANGE when given this value.) Framebuffers set on planes are displayed on top of CRTCs. The stacking order of planes is indicated by the order that the planes are reported by drmModeGetPlaneResources. All drmModeSetPlane operations are synced to vblank and are blocking.</p><h5 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd:	        The file descriptor of an open DRM device.
plane_id:	Plane ID of the plane to be changed.
crtc_id:	CRTC ID of the CRTC that the plane is on.
fb_id:	    Framebuffer ID of the framebuffer to display on the plane, or -1 to leave the framebuffer unchanged.
flags:   	Flags that control function behavior. No flags are currently supported for external use.
crtc_x: 	Offset from left of active display region to show plane.
crtc_y: 	Offset from top of active display region to show plane.
crtc_w: 	Width of output rectangle on display.
crtc_h: 	Height of output rectangle on display.
src_x:  	Clip offset from left of source framebuffer (Q16.16 fixed point).
src_y:  	Clip offset from top of source framebuffer (Q16.16 fixed point).
src_w:  	Width of source rectangle (Q16.16 fixed point).
src_h:  	Height of source rectangle (Q16.16 fixed point).
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0:  	    if successful.
-EINVAL:	if plane_id or crtc_id is invalid.
-errno: 	otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="◆-drmsetclientcap" tabindex="-1"><a class="header-anchor" href="#◆-drmsetclientcap" aria-hidden="true">#</a> ◆ drmSetClientCap()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmSetClientCap</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
                        <span class="token class-name">uint64_t</span> 	capability<span class="token punctuation">,</span>
                        <span class="token class-name">uint64_t</span> 	value 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Enables or disables DRM features (capabilities).</p><h5 id="postcondition-19" tabindex="-1"><a class="header-anchor" href="#postcondition-19" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-18" tabindex="-1"><a class="header-anchor" href="#note-18" aria-hidden="true">#</a> Note</h5><h5 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
fd:	         The file descriptor of an open DRM device.
capability：	Specifies the capability to be enabled or disabled. Supported values are:
                    DRM_CLIENT_CAP_ATOMIC (disabled by default)
                    DRM_CLIENT_CAP_UNIVERSAL_PLANES (disabled by default)
value:  	 0 to disable the capability, or 1 to enable it.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 if successful, or -EINVAL otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmwaitvblank" tabindex="-1"><a class="header-anchor" href="#◆-drmwaitvblank" aria-hidden="true">#</a> ◆ drmWaitVBlank()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmWaitVBlank</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
drmVBlankPtr 	vbl 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Waits for a vertical blanking interval (vblank).</p><p>Waits for a specified vblank, or requests that the registered vblank handler be called when a specified vblank occurs.</p><h5 id="postcondition-20" tabindex="-1"><a class="header-anchor" href="#postcondition-20" aria-hidden="true">#</a> Postcondition</h5><h5 id="note-19" tabindex="-1"><a class="header-anchor" href="#note-19" aria-hidden="true">#</a> Note</h5><p>currently does not support all drmVblankPtr fields.</p><h5 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd:	    The file descriptor of an open DRM device.
vbl:	A description of the requested vblank. The vbl-&gt;type field must contain one of these values:
           DRM_VBLANK_ABSOLUTE: request.sequence is the vblank count since some point in the past, e.g. system boot.
           DRM_VBLANK_RELATIVE: request.sequence is the vblank count from the current value. e.g. 1 specifies the next vblank. The value may be bitwise ORed with any combination of these values:
           DRM_VBLANK_SECONDARY: Uses the secondary display&#39;s vblank.
           DRM_VBLANK_EVENT: Returns immediately and triggers the event callback instead of waiting for a specified vblank.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 if successful, or -1 otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="◆-drmmodepageflip" tabindex="-1"><a class="header-anchor" href="#◆-drmmodepageflip" aria-hidden="true">#</a> ◆ drmModePageFlip()</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">drmModePageFlip</span>	<span class="token punctuation">(</span>	<span class="token keyword">int</span> 	fd<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	crtc_id<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	fb_id<span class="token punctuation">,</span>
<span class="token class-name">uint32_t</span> 	flags<span class="token punctuation">,</span>
<span class="token keyword">void</span> <span class="token operator">*</span> 	user_data 
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="postcondition-21" tabindex="-1"><a class="header-anchor" href="#postcondition-21" aria-hidden="true">#</a> Postcondition</h5><p>Requests a page flip (framebuffer change) on the specified CRTC.</p><p>Schedules a page flip on the specified CRTC. By default, the CRTC will be reprogrammed to display the specified framebuffer after the next vertical refresh.</p><h5 id="note-20" tabindex="-1"><a class="header-anchor" href="#note-20" aria-hidden="true">#</a> Note</h5><h5 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21" aria-hidden="true">#</a> Parameters</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fd :	    The file descriptor of an open DRM device.
crtc_id :	CRTC ID of the CRTC whose framebuffer is to be changed.
fb_id :	    Framebuffer ID of the framebuffer to be displayed.
flags :	    Flags affecting the operation. Supported values are:
                  DRM_MODE_PAGE_FLIP_ASYNC: Flip immediately, not at vblank.
                  DRM_MODE_PAGE_FLIP_EVENT: Send page flip event.
user_data:	Data used by the page flip handler if vblank event was requested.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0	if successful.
-EINVAL	if crtc_id or fb_id is invalid.
-errno	otherwise.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-k510-drm-新增画框函数使用说明" tabindex="-1"><a class="header-anchor" href="#_3-3-k510-drm-新增画框函数使用说明" aria-hidden="true">#</a> 3.3 k510 DRM 新增画框函数使用说明</h3><p>结构体定义</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">vo_draw_frame</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint32_t</span> draw_en<span class="token punctuation">;</span>       <span class="token comment">// 使能</span>
    <span class="token class-name">uint32_t</span> line_x_start<span class="token punctuation">;</span>  <span class="token comment">// start x</span>
    <span class="token class-name">uint32_t</span> line_y_start<span class="token punctuation">;</span>  <span class="token comment">// start y</span>

    <span class="token class-name">uint32_t</span> line_x_end<span class="token punctuation">;</span>    <span class="token comment">// stop x</span>
    <span class="token class-name">uint32_t</span> line_y_end<span class="token punctuation">;</span>    <span class="token comment">// stop y</span>

    <span class="token class-name">uint32_t</span> frame_num<span class="token punctuation">;</span>     <span class="token comment">// 画框的id</span>

    <span class="token class-name">uint32_t</span> crtc_id<span class="token punctuation">;</span>       <span class="token comment">// crtc id</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>宏定义</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>define DRM_KENDRYTE_DRAW_FRAME         <span class="token number">0x00</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DRM_IOCTL_KENDRYTE_DRAW_FRAME</span>   <span class="token expression"><span class="token function">DRM_IOWR</span><span class="token punctuation">(</span>DRM_COMMAND_BASE <span class="token operator">+</span> </span><span class="token punctuation">\\</span>
                <span class="token expression">DRM_KENDRYTE_DRAW_FRAME<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">vo_draw_frame</span><span class="token punctuation">)</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>画框函数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">draw_frame</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">vo_draw_frame</span> <span class="token operator">*</span>frame<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">drmIoctl</span><span class="token punctuation">(</span>drm_dev<span class="token punctuation">.</span>fd<span class="token punctuation">,</span> DRM_IOCTL_KENDRYTE_DRAW_FRAME<span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,257);function v(b,f){const n=r("ExternalLinkIcon");return d(),o("div",null,[l,e("p",null,[a("nvdia drm: "),e("a",p,[a("https://docs.nvidia.com/jetson/l4t-multimedia/group__direct__rendering__manager.html"),s(n)])]),e("p",null,[a("drm freedesktop: "),e("a",u,[a("https://cgit.freedesktop.org/mesa/drm"),s(n)]),e("a",h,[a("https://gitlab.freedesktop.org/mesa/drm"),s(n)])]),m])}const g=i(c,[["render",v],["__file","02-Drm_Developer_Guides.html.vue"]]);export{g as default};
