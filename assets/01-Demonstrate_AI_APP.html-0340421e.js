import{_ as s,r as d,o as l,c as o,a as e,b as t,d as i,e as n}from"./app-21fd3c9b.js";const r={},c=n(`<h1 id="演示ai应用指南" tabindex="-1"><a class="header-anchor" href="#演示ai应用指南" aria-hidden="true">#</a> 演示AI应用指南</h1><p>​ 开发板系统中内置了丰富的AI应用示例程序，对每个示例程序我们都提供有对应的脚本文件，脚本文件中已经设置需要运行AI应用程序和对应的参数。</p><p>​ 在开始演示AI应用指南前，需要确保您已经正确连接摄像头和显示屏并正常上电启动开发板。启动开发板后可以发现会自动运行摄像头获取图像并在显示屏上实时预览程序，需要手动结束该应用程序。使用方法如下：</p><ul><li><p>输入<code>ps</code>查看应用程序查看进程号，例如实时预览程序进程端口号为189。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>189 root      0:01 ./v4l2_drm.out -f video_drm_1920x1080.conf -e 1 -s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>输入<code>kill -9 &lt;进程号&gt;</code>，结束实时预览程序进程，例如我查看的端口号为189，则应该输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kill -9 189
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结束实时预览程序后，显示屏会显示白屏，即代表成功结束摄像头获取图像并在显示屏上实时预览程序。</p></li></ul><p>​</p><p>本章节介绍开发板内置的AI应用程序运行脚本都位于<code>/app/ai/shell/</code>目录中。进入该目录，查看是否有对应脚本文件。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@canaan ~ ]$ cd /app/ai/shell/
[root@canaan /app/ai/shell ]$ ls
face_alignment.sh            object_detect_demo_bf16.sh
face_detect.sh               object_detect_demo_uint8.sh
face_expression.sh           open_pose.sh
face_landmarks.sh            person_detect.sh
face_recog.sh                retinaface_mb_320_bf16.sh
hand_image_classify.sh       retinaface_mb_320_uint8.sh
head_pose_estimation.sh      self_learning.sh
license_recog.sh             simple_pose.sh
object_detect.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面介绍每个脚本对应的AI应用程序的运行指南，在进行以下演示时需要确保您的串口终端控制台已进入<code>/app/ai/shell/</code>目录下。</p><h2 id="人脸对齐" tabindex="-1"><a class="header-anchor" href="#人脸对齐" aria-hidden="true">#</a> 人脸对齐</h2><p>人脸对齐，可得到图像或视频中的每个人脸估计出来的depth或者pncc信息。其中pncc信息为三维人脸形状上的顶点，不仅包含这一点的三维坐标信息，还包含此处的RGB取值。</p><p>论文链接：https://sci-hub.et-fine.com/10.1109/TPAMI.2017.2778152</p><p>将3D平均人脸的顶点坐标和RGB取值进行归一化操作，即NCC操作。如下图所示，下图取自论文中的截图。</p><p><img src="http://photos.100ask.net/canaan-docs/image-20230720095951394.png" alt="image-20230720095951394"></p><p>Face Alignment 人脸对齐任务是基于一定量的训练集，得到一个模型，使得该模型对输入的一张任意姿态下的人脸图像能够进行特征点(landmark)标记。Face Alignment 任务一般的呈现方式是人脸特征点的检测与标记。</p><p>运行人脸对齐演示示例，在终端输入:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./face_alignment.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>效果图如下所示：</p><p><img src="http://photos.100ask.net/canaan-docs/alignment3.png" alt="alignment3"></p><h2 id="人脸检测" tabindex="-1"><a class="header-anchor" href="#人脸检测" aria-hidden="true">#</a> 人脸检测</h2><p>人脸检测采用了retina-face网络结构，backbone选取0.25-mobilenet。</p>`,20),u={href:"https://arxiv.org/pdf/1905.00641.pdf",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/deepinsight/insightface",target:"_blank",rel:"noopener noreferrer"},v=n(`<p>下图为单阶段逐像素密集人脸定位方法。</p><p><img src="http://photos.100ask.net/canaan-docs/image-20230720113653152.png" alt="image-20230720113653152"></p><p>使用该应用时，可得到图像或视频中的每个人脸检测框以及每个人脸的左眼球/右眼球/鼻尖/左嘴角/右嘴角五个landmark。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./face_detect.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="人脸检测器-bf16" tabindex="-1"><a class="header-anchor" href="#人脸检测器-bf16" aria-hidden="true">#</a> 人脸检测器-bf16</h3><p>执行非量化模型。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./retinaface_mb_320_bf16.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="人脸检测器-uint8" tabindex="-1"><a class="header-anchor" href="#人脸检测器-uint8" aria-hidden="true">#</a> 人脸检测器-uint8</h3><p>执行uint8量化模型。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./retinaface_mb_320_uint8.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="人脸表情识别" tabindex="-1"><a class="header-anchor" href="#人脸表情识别" aria-hidden="true">#</a> 人脸表情识别</h2><p>人脸表情识别中需要用到两个模型一个模型用于检测人脸；一个模型用于进行人脸表情识别。人脸表情识别采用了人脸表情分类的方式，使用该应用可得到图像或视频中的每个人脸属于以下表情的概率。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./face_expression.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="人脸关键点检测" tabindex="-1"><a class="header-anchor" href="#人脸关键点检测" aria-hidden="true">#</a> 人脸关键点检测</h2><p>人脸关键点检测采用了PFLD(practical facial landmarks detection)。</p>`,15),g={href:"https://arxiv.org/pdf/1902.10859.pdf",target:"_blank",rel:"noopener noreferrer"},h=n(`<p>使用该应用，可得到图像或视频中的每个人脸轮廓的106个关键点。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./face_landmarks.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="人脸识别" tabindex="-1"><a class="header-anchor" href="#人脸识别" aria-hidden="true">#</a> 人脸识别</h2><p>人脸识别采用了人脸特征提取后比对的方式，相同的人的特征会尽可能的像，而不同的人的特征则会有较大差距，使用该应用可得到图像或视频中的每个人脸与人脸底库中的人脸的相似度，以进行人脸识别任务。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./face_recog.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行完成后会进入人脸检测模式，当摄像头检测到人脸后会，按下开发板的Key1，位置如下所示：</p><img align="center" src="http://photos.100ask.net/canaan-docs/image-20230720160249453.png" width="60%" height="60%"><p>按下之后，可以在串口控制台中看到以下输出信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
total took 55.4448 ms
total took 56.2784 ms
Please Enter Your Name to Register:
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述输出信息提示您需要在串口终端输入人脸的登记名称，可直接输入录入人脸的信息，输入完成后按下回车即可。注意：目前登记信息仅支持英文输入。假设我这里输入登记名称为A，如下所示：</p><p><img src="http://photos.100ask.net/canaan-docs/K510-face_recog-input.gif" alt="K510-face_recog-input"></p><p>输入完成后会继续进入人脸检测模式，此时如果您刚刚登记的人脸再次被检测，则会在检测时标注出该人脸的登记信息。 您可重复进行登记人脸信息，登记后可以在人脸检测模式中进行人脸识别，区分登记不同信息的人脸。但当检测到没有登记的人脸信息则不会在检测时标注出人脸信息。</p><h2 id="人形检测" tabindex="-1"><a class="header-anchor" href="#人形检测" aria-hidden="true">#</a> 人形检测</h2><p>使用该应用时，可得到图像或视频中人体的检测框。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./person_detect.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="人体关键点检测-openpose" tabindex="-1"><a class="header-anchor" href="#人体关键点检测-openpose" aria-hidden="true">#</a> 人体关键点检测-openpose</h3><p>人体关键点检测主要有两种检测方式，一个是自上而下，一种是自下而上。本应用采用了自下而上的模型openpose。使用该应用，可得到图像或视频中的每个人体的17个关键点。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./open_pose.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="人体关键点检测-yolov5s" tabindex="-1"><a class="header-anchor" href="#人体关键点检测-yolov5s" aria-hidden="true">#</a> 人体关键点检测-YOLOV5S</h3><p>人体关键点检测主要有两种检测方式，一个是自上而下，一种是自下而上。本应用采用了自上而下的模型采用了YOLOV5S进行人体检测，然后使用simplepose进行关键点回归。使用该应用，可得到图像或视频中的每个人体的17个关键点。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./simple_pose.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="指尖指定区域识别" tabindex="-1"><a class="header-anchor" href="#指尖指定区域识别" aria-hidden="true">#</a> 指尖指定区域识别</h2><p>指尖指定区域识别主要包含3个流程，手掌检测+手掌关键点检测+图像识别。其中，手掌检测使用了512x512分辨率的 tiny-yolov3;手掌关键点检测使用了256x256分辨率的squeezenet1.1;图像识别使用了基于imagenet训练出来的mobilenetv2。通过手部关键点检测，利用两个食指尖，框定待识别区域。利用imagenet分类模型，确定待识别区域。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./hand_image_classify.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="头部态角估计" tabindex="-1"><a class="header-anchor" href="#头部态角估计" aria-hidden="true">#</a> 头部态角估计</h2><p>头部态角估计，可得到图像或视频中的每个人脸的roll/yaw/pitch。roll代表了人头歪的程度；yaw代表了人头左右旋转的程度；pitch代表了人头低头抬头的程度。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./head_pose_estimation.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="车牌识别" tabindex="-1"><a class="header-anchor" href="#车牌识别" aria-hidden="true">#</a> 车牌识别</h2><p>车牌识别的整体流程实际上包含了车牌检测+车牌识别两个流程。车牌检测采用了retinanet，车牌识别采用了lprnet。使用该应用，可得到图像或视频中的每个车牌的内容。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./license_recog.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="yolov5目标检测" tabindex="-1"><a class="header-anchor" href="#yolov5目标检测" aria-hidden="true">#</a> YOLOV5目标检测</h2><p>目标检测采用了YOLOV5，使用该应用，可得到图像或视频中属于以下标签的目标的检测框。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;person&quot;, &quot;bicycle&quot;, &quot;car&quot;, &quot;motorcycle&quot;, &quot;airplane&quot;, &quot;bus&quot;, &quot;train&quot;, &quot;truck&quot;,
&quot;boat&quot;, &quot;traffic light&quot;, &quot;fire hydrant&quot;, &quot;stop sign&quot;, &quot;parking meter&quot;, &quot;bench&quot;, &quot;bird&quot;, &quot;cat&quot;,
&quot;dog&quot;, &quot;horse&quot;, &quot;sheep&quot;, &quot;cow&quot;, &quot;elephant&quot;, &quot;bear&quot;, &quot;zebra&quot;, &quot;giraffe&quot;,
&quot;backpack&quot;, &quot;umbrella&quot;, &quot;handbag&quot;, &quot;tie&quot;, &quot;suitcase&quot;, &quot;frisbee&quot;, &quot;skis&quot;, &quot;snowboard&quot;,
&quot;sports ball&quot;, &quot;kite&quot;, &quot;baseball bat&quot;, &quot;baseball glove&quot;, &quot;skateboard&quot;, &quot;surfboard&quot;, &quot;tennis racket&quot;, &quot;bottle&quot;,
&quot;wine glass&quot;, &quot;cup&quot;, &quot;fork&quot;, &quot;knife&quot;, &quot;spoon&quot;, &quot;bowl&quot;, &quot;banana&quot;, &quot;apple&quot;,
&quot;sandwich&quot;, &quot;orange&quot;, &quot;broccoli&quot;, &quot;carrot&quot;, &quot;hot dog&quot;, &quot;pizza&quot;, &quot;donut&quot;, &quot;cake&quot;,
&quot;chair&quot;, &quot;couch&quot;, &quot;potted plant&quot;, &quot;bed&quot;, &quot;dining table&quot;, &quot;toilet&quot;, &quot;tv&quot;, &quot;laptop&quot;,
&quot;mouse&quot;, &quot;remote&quot;, &quot;keyboard&quot;, &quot;cell phone&quot;, &quot;microwave&quot;, &quot;oven&quot;, &quot;toaster&quot;, &quot;sink&quot;,
&quot;refrigerator&quot;, &quot;book&quot;, &quot;clock&quot;, &quot;vase&quot;, &quot;scissors&quot;, &quot;teddy bear&quot;, &quot;hair drier&quot;, &quot;toothbrush&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./object_detect.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="yolov5目标检测-bf16" tabindex="-1"><a class="header-anchor" href="#yolov5目标检测-bf16" aria-hidden="true">#</a> YOLOV5目标检测-bf16</h3><p>执行非量化模型，使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./object_detect_demo_bf16.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="yolov5目标检测-uint8" tabindex="-1"><a class="header-anchor" href="#yolov5目标检测-uint8" aria-hidden="true">#</a> YOLOV5目标检测-uint8</h3><p>执行uint8量化模型。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./object_detect_demo_uint8.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="自学习knn算法" tabindex="-1"><a class="header-anchor" href="#自学习knn算法" aria-hidden="true">#</a> 自学习KNN算法</h2><p>自学习借鉴的是KNN（k-Nearest Neighbors）的思想。该算法的思想是： 一个样本与数据集中的k个样本最相似， 如果这k个样本中的大多数属于某一个类别， 则该样本也属于这个类别。使用方法如下所示，输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./self_learning.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行完成后会在显示屏上出现一个绿色的框。</p><p>该AI示例需要用到按键(Key 1)和按键(Key 2)，两个按键的位置如下所示：</p><img align="center" src="http://photos.100ask.net/canaan-docs/image-20230720193602069.png" width="50%" height="50%"><p>​ 将需要识别的物体放在摄像头范围内，使该物体可以显示在绿色框中的正中间，此时需要手动标记按下Key1开始标记class0，按下Key1时会串口终端会提示以下信息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
Please press UP or DOWN button, UP: confirm, DOWN: switch!
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述信息为提示您，如果按下Key1则为标注图像，按下Key2则为切换模式。</p><p>继续按下Key1可开始自动标记该物体，此时串口终端会输出如下信息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
Pressed UP button!
class_0 : 1
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时再按下Key1会继续继续让您选择继续标注图像还是切换。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
Please press UP or DOWN button, UP: confirm, DOWN: switch!
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要重复标记多次图像，可以继续按下Key1标记该物体。如下所示：</p><p><img src="http://photos.100ask.net/canaan-docs/K510-self_learning-mark.gif" alt="K510-self_learning-mark"></p><p>当标注完类别1（class 0）后按下Key2，串口终端会输出以下内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 48, action: released &lt;&lt;&lt;&lt;&lt;
&gt;&gt;&gt;&gt;&gt; key code: 48, action: pressed &lt;&lt;&lt;&lt;&lt;
Pressed DOWN button!
switch to class_1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时会切换标注类别1（class 1）,继续按下Key 1进行标注类别1，选择功能。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
Please press UP or DOWN button, UP: confirm, DOWN: switch!
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续按下Key 1标注类别1物体</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
Pressed UP button!
class_1 : 1
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要重复标记多次图像，可以继续按下Key1标记该物体，与上面类别0(class 0)标注方法一直。</p><p>在标注完成后，在不进入功能选择时，按下key 2结束标注，如下图所示。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt;&gt;&gt; key code: 30, action: pressed &lt;&lt;&lt;&lt;&lt;
Pressed UP button!
class_1 : 8
&gt;&gt;&gt;&gt;&gt; key code: 30, action: released &lt;&lt;&lt;&lt;&lt;
&gt;&gt;&gt;&gt;&gt; key code: 48, action: released &lt;&lt;&lt;&lt;&lt;
&gt;&gt;&gt;&gt;&gt; key code: 48, action: pressed &lt;&lt;&lt;&lt;&lt;
Pressed DOWN button!
Enter recog!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将刚才标注过的物体放在绿框内，此时会开发板会在显示屏上自动检测识别的物品，识别到物体时，左上角会显示对应物体的类别以及检测的精准度。</p>`,66);function m(b,q){const a=d("ExternalLinkIcon");return l(),o("div",null,[c,e("p",null,[t("论文链接："),e("a",u,[t("https://arxiv.org/pdf/1905.00641.pdf"),i(a)])]),e("p",null,[t("GitHub链接："),e("a",p,[t("https://github.com/deepinsight/insightface"),i(a)])]),v,e("p",null,[t("论文链接："),e("a",g,[t("https://arxiv.org/pdf/1902.10859.pdf"),i(a)])]),h])}const _=s(r,[["render",m],["__file","01-Demonstrate_AI_APP.html.vue"]]);export{_ as default};
