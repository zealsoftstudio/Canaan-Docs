import{_ as e,o as l,c as i,e as a}from"./app-21fd3c9b.js";const n={},d=a(`<h1 id="编译helloword应用程序" tabindex="-1"><a class="header-anchor" href="#编译helloword应用程序" aria-hidden="true">#</a> 编译helloword应用程序</h1><p>开始进行交叉编译前，需要先指定存放交叉编译需要使用的库文件头文件的文件夹。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export STAGING_DIR=~/tina-v853-open/prebuilt/rootfsbuilt/arm/toolchain-sunxi-musl-gcc-830/toolchain/arm-openwrt-linux-muslgnueabi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>book@100ask:~/workspaces/helloword$ export STAGING_DIR=~/tina-v853-open/prebuilt/rootfsbuilt/arm/toolchain-sunxi-musl-gcc-830/toolchain/arm-openwrt-linux-muslgnueabi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-编写helloword应用程序" tabindex="-1"><a class="header-anchor" href="#_1-编写helloword应用程序" aria-hidden="true">#</a> 1.编写helloword应用程序</h3><p>helloword.c的源码如下，在确保上一步已经完成source build/envsetup.sh 以后，在终端内 输入 gedit helloword.c 会打开一个 文本编辑器，进入文本编辑器内，将如下代码粘贴进去，粘贴完成后，直接按下 ctrl + s 保存，最后点击 右上角的 x 关闭文本编辑器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#include &lt;stdio.h&gt;
int main (void)
{
    printf(&quot;hello word!\\n&quot;);
    return 0;
}   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写完成后，保存到 helloword.c之后我们执行 如下编译命令进行编译</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>book@100ask:~/workspaces/helloword$ ~/tina-v853-open/prebuilt/rootfsbuilt/arm/toolchain-sunxi-musl-gcc-830/toolchain/bin/arm-openwrt-linux-gcc -o hello helloword.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译完成后可以执行 file hellword 命令 来查看编译出来的文件类型 是否是 arm 架构类型。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>book@100ask:~/workspaces/helloword$ file hello
hello: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-musl-armhf.so.1, with debug_info, not stripped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-上传程序到开发板上运行" tabindex="-1"><a class="header-anchor" href="#_2-上传程序到开发板上运行" aria-hidden="true">#</a> 2.上传程序到开发板上运行</h3><p>把编译生成的 <strong>hello</strong> 文件通过adb命令拷贝到开发板上运行，命令如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adb push hello /root/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>传输完成后在开发板上执行如下操作添加可执行权限，并运行它：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chmod +x hello
./helloword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://photos.100ask.net/allwinner-docs/v853/LinuxEnv/image-20230627141803244.png" alt="image-20230627141803244"></p>`,18),r=[d];function s(o,t){return l(),i("div",null,r)}const u=e(n,[["render",s],["__file","02-Compile-Helloword-program.html.vue"]]);export{u as default};
